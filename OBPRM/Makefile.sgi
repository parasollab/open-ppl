# $Id$
#------------------------------------------------------
# Make your own and use it or use the one in BASELINE
#------------------------------------------------------

# -- for dynamic shared object library libgms.so
   GMSLIB_DIR = .
   GMSLIB     = -L${GMSLIB_DIR} -lgms

# -- for dynamic shared object library libmp.so
   MPLIB_DIR  = .
   MPLIB      = -L${MPLIB_DIR} -lmp

#------------------------------------------------------
# Basic defns; do not change
#------------------------------------------------------
 ON        = 1
 OFF       = 0
 MATHLIB   = -lm
 OPENGL    = /usr/share/src/OpenGL/libglut
 NR_INCL   = -I/pub/dsmft/GMS/NR
 STL_INCL  = -I/pub/dsmft/STL

#-----------------------------------------------------------------------------
# collision detection: c-space toolkit, vclip
#--------------------------------------------------------------------------

 CSTKLIB_DIR  = /pub/dsmft/CSTK/CSTK-1.22/cstk
 CSTKLIB      = -L${CSTKLIB_DIR}/lib -lcstk
 CSTK_INCL    = -I${CSTKLIB_DIR}/src/include


 VCLIP_DIR     = /pub/dsmft/VCLIP
 VCLIPLIB_DIR  = ${VCLIP_DIR}/lib
 VCLIPLIB      = -L${VCLIPLIB_DIR} -lvclip
 VCLIP_INCL    = -I${VCLIP_DIR}/include

 RAPID_DIR     = /pub/dsmft/RAPID/RAPID_v2_01
 RAPIDLIB_DIR  = ${RAPID_DIR}
 RAPIDLIB      = -L${RAPIDLIB_DIR} -lRAPID
 RAPID_INCL    = -I${RAPID_DIR}


#-----------------------------------------------------------------------------
# Defines for various types of executables
#	VERBOSE  for printing out all kinds of babble for debugging
#       INTERMEDIATE_FILES for creating intermediate "*.path" files
#--------------------------------------------------------------------------
   ADEFS = -DVERBOSE=0 -DINTERMEDIATE_FILES=1 -DCHECKIFSAMECC=1  -DUSE_CSTK -DUSE_VCLIP -DUSE_RAPID

### DEFS = ${ADEFS} -DQUIETGRAPH -DQUIET
    DEFS = ${ADEFS} 

showdefs :: 
	echo "${DEFS}";


 AFLAGS    = -I. ${STL_INCL} ${NR_INCL} ${CSTK_INCL} ${VCLIP_INCL} ${RAPID_INCL} ${DEFS}

#------------------------------------------------------
# if GRAPHICS are OFF then blank out GLLIBS & GL_INCL
#------------------------------------------------------

#------
# ON
#------
#  GLLIBS    = ${OPENGL}/libglut.a -lGLU -lGL -lXmu -lXext -lX11 
#  GL_INCL   = -I${OPENGL}
#  BFLAGS    = ${AFLAGS} ${GL_INCL} -DGRAPHICS=${ON}

#------
# OFF
#------
   GLLIBS    =
   GL_INCL   =
   BFLAGS    = ${AFLAGS}            -DGRAPHICS=${OFF}



#-----------------------------------------------------------------------------
# Choose a compiler & its options
#--------------------------------------------------------------------------
 CC = CC
#CC = /pub/gnu_sgi/bin/g++

CXX = CC

# -- for development on our O2s
# -- (fast_compile/bad_code, medium_compile/code, verbose) -- 
#  OPTS = 
#  OPTS = -O1 -o32
#  OPTS = -O2 -o32 -OPT:Olimit=0
#  OPTS = -show -ptv 
# -- optimized (our O2's) (slow_compile/good_code) --
#  OPTS = -r5000 -mips4 -Ofast -o32 -OPT:Olimit=0

# -- for development on TERMINATOR (can't seem to use it better due to cstk)
#lkdlkd
  OPTS = -o32 -O2 -exceptions
#  OPTS = -o32 -O1 -show -ptv 
# -- optimized (our O2's) (slow_compile/good_code) --
#  OPTS =  -o32 -O2 -OPT:Olimit=0 -show

   INCS = $(BFLAGS)

#  DEPS = 
   DEPS = -MDupdate Dependencies 

# -- warnings (default, full, none) --
#  CWARNS = 
#  CWARNS = -fullwarn
   CWARNS = -w

CFLAGS     = $(OPTS) $(INCS) $(DEPS) $(CWARNS)
CXXFLAGS   = $(CFLAGS) 
DSOFLAGS   = $(CFLAGS) -shared -no_unresolved

#-----------------------------------------------------------------------------
# Build 
#--------------------------------------------------------------------------

#--------------------------------------------------------------------
deps: 
	touch Dependencies

libs: objs libgms.so libmp.so 

libgms.so: $(GMS_OBJS)
	$(CXX) -o libgms.so $(DSOFLAGS) $(GMS_OBJS)

libmp.so: $(MP_OBJS)
	$(CXX) -o libmp.so  $(DSOFLAGS) $(MP_OBJS) 

#--------------------------------------------------------------------
obprm: main_obprm.c  libs
	$(CXX) $(CXXFLAGS) -o obprm \
           -rpath $(GMSLIB_DIR):$(MPLIB_DIR):$(CSTKLIB_DIR):${VCLIPLIB_DIR}:${RAPIDLIB_DIR} \
                main_obprm.c \
		$(GMSLIB) $(MPLIB) $(GLLIBS) $(MATHLIB) $(CSTKLIB) ${VCLIPLIB} ${RAPIDLIB}
	rm -f main_obprm.o

#--------------------------------------------------------------------
query: main_query.c libs
	$(CXX) $(CXXFLAGS) -o query \
           -rpath $(GMSLIB_DIR):$(MPLIB_DIR):$(CSTKLIB_DIR):${VCLIPLIB_DIR}:${RAPIDLIB_DIR} \
                main_query.c \
                $(GMSLIB) $(MPLIB) $(GLLIBS) $(MATHLIB) $(CSTKLIB) ${VCLIPLIB} ${RAPIDLIB}
	rm -f main_query.o

#--------------------------------------------------------------------
% : %.o
	$(CXX) $(CXXFLAGS) -o $@ $< $(MATHLIB) $(CSTKLIB) ${VCLIPLIB} ${RAPIDLIB}

#--------------------------------------------------------------------

GMS_OBJS = \
	AttEnvironment.o \
	Environment.o \
	FreeBody.o \
	FixedBody.o \
	AttFreeBody.o \
	AttFixedBody.o \
	Connection.o \
	Contact.o \
	DHparameters.o \
	Transformation.o \
	Orientation.o \
	GMSPolyhedron.o \
	Matrix.o \
	Vectors.o \
	Body.o \
	MultiBody.o 

MP_OBJS = \
	Input.o \
	HapticInput.o \
	Cfg.o \
	CfgManager.o \
	Cfg_free.o \
	Cfg_fixed_PRR.o \
	Cfg_free_serial.o \
	util.o \
	Clock_Class.o \
	Stat_Class.o \
	LocalPlanners.o \
	DistanceMetrics.o \
	CollisionDetection.o \
	GenerateMapNodes.o \
	ConnectMapNodes.o \
	Roadmap.o \
	QueryCmds.o \
	Query.o 

objs: $(MP_OBJS) $(GMS_OBJS)

#--------------------------------------------------------------------
runclean::
	rm -f mapnodes.*
	rm -f *.map
	rm -f *.path

clean::
	rm -f query
	rm -f obprm

reallyclean::
	rm -f query
	rm -f obprm
	rm -f libmp.so
	rm -f libgms.so
	rm -R -f ii_files
	rm -f *.o
	rm -f Dependencies
	rm -f so_locations

#-----------------------------------------------------------------------------
# Build and update depent
#-----------------------------------------------------------------------------

Dependencies:
	echo >Dependencies "#-*- Makefile -*-"

include Dependencies

