#------------------------------------------------------
# Make your own and use it or use the one in BASELINE
#------------------------------------------------------

# -- for dynamic shared object library libobprm.so
   OBPRM_DIR   = .
   OBPRM_LIB   = -L${OBPRM_DIR} -lobprm

#------------------------------------------------------
# Basic defns; do not change
#------------------------------------------------------
 MATHLIB   = -lm
 STL_INCL  = -I/pub/dsmft/STL

#-----------------------------------------------------------------------------
# collision detection packages available
#--------------------------------------------------------------------------


 VCLIP_DIR     = ../vclip_1.0
 VCLIPLIB_DIR  = ${VCLIP_DIR}/lib
 VCLIPLIB      = -L${VCLIPLIB_DIR} -lvclip
 VCLIP_INCL    = -I${VCLIP_DIR}/include

 RAPID_DIR     = ../RAPID_v2_01
 RAPIDLIB_DIR  = ${RAPID_DIR}
 RAPIDLIB      = -L${RAPIDLIB_DIR} -lRAPID
 RAPID_INCL    = -I${RAPID_DIR}


#-----------------------------------------------------------------------------
# Defines for various types of executables
#	VERBOSE  for printing out all kinds of babble for debugging
#       INTERMEDIATE_FILES for creating intermediate "*.path" files
#--------------------------------------------------------------------------
   ADEFS = -DVERBOSE=0 -DINTERMEDIATE_FILES=1 -DCHECKIFSAMECC=1  -DUSE_RAPID -DUSE_VCLIP -DBSD

### DEFS = ${ADEFS} -DQUIETGRAPH -DQUIET
    DEFS = ${ADEFS} 

showdefs :: 
	echo "${DEFS}";


 AFLAGS    = -I. ${STL_INCL} ${CSTK_INCL} ${VCLIP_INCL} ${RAPID_INCL} ${DEFS}

#-----------------------------------------------------------------------------
# Choose a compiler & its options
#--------------------------------------------------------------------------
 CC = g++
#CC = /pub/gnu_sgi/bin/g++
#CC = /usr/local/gcc-2.95.1/bin/g++

CXX = g++

# -- for development on TERMINATOR (can't seem to use it better due to cstk)
   OPTS = -g -O2 -fexceptions 
#  OPTS = -o32 -O1 -show -ptv 
# -- optimized (our O2's) (slow_compile/good_code) --
#  OPTS =  -o32 -O2 -OPT:Olimit=0 -show

#  DEPS = 
#  DEPS = -MDupdate Dependencies 

# -- warnings (default, full, none) --
#  CWARNS = 
#  CWARNS = -fullwarn
   CWARNS = -w

CFLAGS     = $(OPTS) $(AFLAGS) $(DEPS) $(CWARNS)
CXXFLAGS   = $(CFLAGS) 
DSOFLAGS   = $(CFLAGS) -shared -no_unresolved

#-----------------------------------------------------------------------------
# Build 
#--------------------------------------------------------------------------

#--------------------------------------------------------------------
deps:: 
	touch Dependencies

libs:: objs libobprm.a

libobprm.a:: $(OBJS)
	ar  -rc libobprm.a $(OBJS) 

#--------------------------------------------------------------------
obprm:: main_obprm.cpp libs
	$(CXX) $(CXXFLAGS)  -o obprm \
	main_obprm.cpp \
	libobprm.a $(MATHLIB) $(CSTKLIB) ${VCLIPLIB} ${RAPIDLIB} -L../qhull -lqhull
	rm -f main_obprm.o

#--------------------------------------------------------------------
query:: main_query.cpp libs
	$(CXX) $(CXXFLAGS)  -o query \
	main_query.cpp \
	libobprm.a $(MATHLIB) $(CSTKLIB) ${VCLIPLIB} ${RAPIDLIB} -L../qhull -lqhull
	rm -f main_query.o

#--------------------------------------------------------------------
% :: %.o
	$(CXX) $(CXXFLAGS) -o $@ $< $(MATHLIB) $(CSTKLIB) ${VCLIPLIB} ${RAPIDLIB}

#--------------------------------------------------------------------

OBJS = \
	Environment.o \
	FreeBody.o \
	FixedBody.o \
	Connection.o \
	Contact.o \
	DHparameters.o \
	Transformation.o \
	Orientation.o \
	GMSPolyhedron.o \
	Matrix.o \
	Vectors.o \
	Body.o \
	MultiBody.o \
	Input.o \
	HapticInput.o \
        Haptic.o \
        Push.o \
	Cfg.o \
	CfgManager.o \
	Cfg_free.o \
	Cfg_fixed_PRR.o \
	Cfg_free_tree.o \
	util.o \
	Clock_Class.o \
	Stat_Class.o \
	LocalPlanners.o \
	DistanceMetrics.o \
	CollisionDetection.o \
	GenerateMapNodes.o \
	ConnectMapNodes.o \
	Roadmap.o \
	QueryCmds.o \
	Query.o 

objs:: $(OBJS)

#--------------------------------------------------------------------
runclean::
	rm -f mapnodes.*
	rm -f *.map
	rm -f *.path

clean::
	rm -f query
	rm -f obprm

reallyclean::
	rm -f query
	rm -f obprm
	rm -f *.a *.so
	rm -R -f ii_files
	rm -f *.o
	rm -f so_locations

#-----------------------------------------------------------------------------
# Build and update dependencies
#-----------------------------------------------------------------------------

Dependencies::
	echo >Dependencies "#-*- Makefile -*-"

include Dependencies

