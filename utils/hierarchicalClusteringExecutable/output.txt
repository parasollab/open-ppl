Attempt to reference field of non-structure array.
Could not initialize the dynamic Java classpath needed for toolboxes and
 custom java classes. The Java calls may not work in the deployed mode. If
 you are using certain MathWorks toolbox that uses jar files, you can
 extract the CTF archive by either running the application once or using the
 extractCTF utility and then copy the toolbox jar file from 
 <component>_mcr/java/jar/toolbox directory to the <mcrroot>/java/jar/toolbox
 directory. For your custom Java class and jar files, you can copy these to
 any directory on your target machine and add this directory and/or the jar
 files with fully qualified path to the classpath.txt in your MCR installation.
Warning: latest version of matlab app-defaults file not found.
Contact your system administrator to have this file installed.
This feature requires Java 1.2 or greater
Error in ==> javaclasspath>local_javapath at 134

Error in ==> javaclasspath at 60

Error in ==> javaaddpath at 65


------------------------------------------------------------------------
       Segmentation violation detected at Sun Sep  6 02:50:15 2009
------------------------------------------------------------------------

Configuration:
  MATLAB Version:   7.1.0.183 (R14) Service Pack 3
  MATLAB License:   unknown
  Operating System: Linux 2.6.18-128.7.1.el5 #1 SMP Mon Aug 24 08:20:55 EDT 2009 i686
  Window System:    The X.Org Foundation (70101000), display :0.0
  Current Visual:   0x23 (class 4, depth 24)
  Processor ID:     x86 Family 15 Model 4 Stepping 3, GenuineIntel
  Virtual Machine:  Java 1.6.0_01 with Sun Microsystems Inc. Java HotSpot(TM) Client VM mixed mode, sharing
  Default Charset:  UTF-8

Register State:
  eax = 08aba810   ebx = 08aba814
  ecx = 00000000   edx = 08aba7f0
  esi = 08aba000   edi = 00edcfd3
  ebp = 074bd0f8   esp = 074bd0b4
  eip = 031d41fc   flg = 00210216

Stack Trace:
  [0] libjvm.so:0x031d41fc(0x08aba0e8, 0, 0x00edcfd3 "<init>", 0x006096da "(II)V")
  [1] libjvm.so:0x031b5573(0x08aba0e8, 0, 0x00edcfd3 "<init>", 0x006096da "(II)V")
  [2] libmwjmi.so:mljGetConstructor(_jclass*, char const*)(0, 0x006096da "(II)V", 0x074bd1c8, 0x066f6c38) + 68 bytes
  [3] libuij.so:UIJ_CreateWindow(0x067c76a0 "com.mathworks.hg.peer.FigurePeer..", 35, 0, 0) + 57 bytes
  [4] libmwhg.so:UIJ_CreatePeerWindow(0xb7384770, 0x068276b8, 0x074bd228, 0x0669654d) + 77 bytes
  [5] libmwhg.so:hg::FigureWindowProxyBase::createPeerWindow(WinRec_tag*) const(0x0682b38c, 0xb7384770, 0x074bd228, 0x06a58a24) + 31 bytes
  [6] libmwhg.so:virtual thunk to hg::FigureWindowProxyBase::createPeerWindow(WinRec_tag*) const(0x0682b394, 0xb7384770, 0, 0x0137ebb4) + 45 bytes
  [7] libmwuix.so:create_figure_window(0xb7384770, 0, 0xb7381fb0, 1) + 542 bytes
  [8] libmwhg.so:really_create_figure_window(GObject_tag*, WinRec_tag*, Color_tag*, UDInterface*, NDMdata_tag*)(0xb471b730, 0, 0xb7380d70, 0x09200730) + 199 bytes
  [9] libmwhg.so:displayMgrAddFigure(0x09200730, 0x067c5f44 "Type", 0, 0x00ea7cec) + 506 bytes
  [10] libmwhg.so:displayChildAdd(UDInterface*, void*, void*)(0x09200730, 0, 0, 1) + 80 bytes
  [11] libmwhg.so:HGChildListener::execute(UDEvent*)(0x08bb3eb0, 0x074bd3c0, 0x074bd348, 0x00e75536) + 105 bytes
  [12] libmwudd.so:UDListenerList::execute(UDEvent*)(0xb73650b0, 0x074bd3c0, 0x08bb3ed0, 0x00ea7cec) + 223 bytes
  [13] libmwudd.so:UDListenerManagerHost::notifyEvent(UDDatabaseClient*, UDEventSource const*, UDEventInfo const*, UDEvent*)(0xb74f6df0, 0x08b81978, 0xb74f6df4, 0x08bb3ed0) + 91 bytes
  [14] libmwudd.so:UDInterface::notifyChildAddedAndParentChanged(UDInterface*)(0x09200730, 0, 64, 2737909) + 232 bytes
  [15] libmwudd.so:UDInterface::addRight(UDInterface*)(0x09200730, 0x09200630 ", 0, 0) + 375 bytes
  [16] libmwudd.so:UDInterface::addFirstBelow(UDInterface*)(0x09200730, 0xb74f6df0, 0x074bd4e8, 0x00e3cd53) + 110 bytes
  [17] libmwudd.so:udiSetParent(0x09200730, 0xb74f6df0, 0x074bd518, 0x067799d0) + 42 bytes
  [18] libmwhg.so:sgo_parent(0xb471b730, 0xb7058bd0, 0x074bd538, 0x067169af) + 365 bytes
  [19] libmwhg.so:sgo_parent_handle(0xb471b730, 0, 0, 0x067e3580) + 53 bytes
  [20] libmwhg.so:callDoubleSetFcnUDDOptional(0x067e3580, 0xb471b730, 0, 0) + 99 bytes
  [21] libmwhg.so:HGPropInfo::setValueE(UDDatabaseClient*, UDInterface*, void*, UDErrorStatus*)(0x08b81e68, 0x08fd5f80, 0x09200730, 0x074bd800) + 336 bytes
  [22] libmwudd.so:UDInterface::setE(UDDatabaseClient*, UDPropInfo*, void*, UDErrorStatus*)(0x09200730, 0x08fd5f80, 0x08b81e68, 0x074bd800) + 791 bytes
  [23] libmwudd.so:udiSet(0x09200730, 0x08b81e68, 0x074bd800, 0) + 67 bytes
  [24] libmwhg.so:goSetUDDDoubleProp(0x09200730, 0, 0, 0x08b81e68) + 238 bytes
  [25] libmwhg.so:callDoubleSetFcnUDDOptional(0x067e3580, 0xb471b730, 0, 0) + 202 bytes
  [26] libmwhg.so:Matrix_to_parent_handle_set_check_fcn(0x09200670, 0xb471b730, 0x067e3580, 0) + 166 bytes
  [27] libmwhg.so:HG_SetSwitchYard(GObject_tag*, GO_PropID_tag*, mxArray_tag*)(0xb471b730, 0xb73745b0, 0x09200670, 0) + 506 bytes
  [28] libmwhg.so:hgDoPostCreationActions(0x074bda8c, 1, 0, 0x074bdef0) + 648 bytes
  [29] libmwhg.so:HandleCreationStuff(0x074bda8c, 1, 0, 0x074bdef0) + 88 bytes
  [30] libmwhg.so:create_new_figure(double, int, mxArray_tag**)(0, 0, 0, 0x074bdef0) + 163 bytes
  [31] libmwhg.so:hgFigure(0, 0x074bde90, 0, 0x074bdef0) + 340 bytes
  [32] libmwm_dispatcher.so:Mfh_builtin<mxArray_tag>::dispatch_mf(int, mxArray_tag**, int, mxArray_tag**)(0xb73df830, 0, 0x074bde90, 0) + 74 bytes
  [33] libmwm_dispatcher.so:Mfh_MATLAB_fn::dispatch_fh(int, mxArray_tag**, int, mxArray_tag**)(0xb73df830, 0, 0x074bde90, 0) + 211 bytes
  [34] libmwm_interpreter.so:inDispatchFromStack(0, 0xb49e86d4 "figure", 0, 0) + 1422 bytes
  [35] libmwm_interpreter.so:inDispatchCall(char const*, int, int, int, int*, int*)(0xb49e86d4 "figure", 0, 0, 0) + 139 bytes
  [36] libmwm_interpreter.so:.L802(1, 3742, 281, 0) + 174 bytes
  [37] libmwm_interpreter.so:inInterPcodeSJ(inDebugCheck, int, int, opcodes, inPcodeNest_tag*, int*)(1, 3742, 73, 0) + 474 bytes
  [38] libmwm_interpreter.so:inExecuteMFunctionOrScript(Mfh_mp*, bool)(0xb7083e70, 0, 0xb7083e70, 0xfffffffe) + 537 bytes
  [39] libmwm_interpreter.so:inWordsj(0, 0x074be860, 4, 0x074be8c0) + 408 bytes
  [40] libmwm_interpreter.so:Mfh_mp::dispatch_file(_mdUnknown_workspace*, int, mxArray_tag**, int, mxArray_tag**)(0xb7083e70, 0, 0, 0x074be860) + 389 bytes
  [41] libmwm_interpreter.so:Mfh_mp::dispatch_file(int, mxArray_tag**, int, mxArray_tag**)(0xb7083e70, 0, 0x074be860, 4) + 53 bytes
  [42] libmwm_dispatcher.so:Mfh_file::dispatch_fh(int, mxArray_tag**, int, mxArray_tag**)(0xb7083e70, 0, 0x074be860, 4) + 281 bytes
  [43] libmwm_interpreter.so:ResolverFunctionDesc::CallFunction(int, mxArray_tag**, int, mxArray_tag**)(0x074beba4, 0, 0x074be860, 4) + 549 bytes
  [44] libmwm_interpreter.so:Resolver::CallMFunction(int, int, _m_operand*, m_operand_storage*, int, _m_operand*, m_operand_storage*, int*)(0x074be980, 0, 1, 0xb7513cf0) + 1093 bytes
  [45] libmwm_interpreter.so:inResolveMFunctionCall(_m_function_desc*, int, int, _m_operand*, m_operand_storage*, int, _m_operand*, m_operand_storage*, int*, inMarshalType*, unsigned, int, unsigned const*, int)(0x091117d8, 0, 1, 0xb7513cf0) + 298 bytes
  [46] libmwm_interpreter.so:accelMFunctionCall(_accelOp*, _accelOp**, int*, inMarshalType*)(0x09121bb0, 0x074bf2b8, 0x074bf214, 0x074bf4fc) + 212 bytes
  [47] libmwm_interpreter.so:.L1446(0xb7556100, 0x074bf4fc, 0x074bfb00, 0x012e60cc) + 103 bytes
  [48] libmwm_interpreter.so:inAccel(accelCode*, inMarshalType*, int*)(0xb7556100, 0x074bf4fc, 0x074bfb00, 0) + 45 bytes
  [49] libmwm_interpreter.so:inExecuteHotSegment(_inJitAccelInfo*, opcodes*, int*, int*)(0x074bf7d8, 0x074bf83c, 0x074bf7d4, 0x074bfb00) + 1417 bytes
  [50] libmwm_interpreter.so:.L955(1, 491, 21, 0) + 602 bytes
  [51] libmwm_interpreter.so:inInterPcodeSJ(inDebugCheck, int, int, opcodes, inPcodeNest_tag*, int*)(1, 491, 6, 0) + 474 bytes
  [52] libmwm_interpreter.so:inExecuteMFunctionOrScript(Mfh_mp*, bool)(0xb7083310, 0, 0xb7083310, 1) + 537 bytes
  [53] libmwm_interpreter.so:inWordsj(0, 0x074bfd84, 1, 0x074bfea4) + 408 bytes
  [54] libmwm_interpreter.so:Mfh_mp::dispatch_file(_mdUnknown_workspace*, int, mxArray_tag**, int, mxArray_tag**)(0xb7083310, 0, 0, 0x074bfd84) + 389 bytes
  [55] libmwm_interpreter.so:Mfh_mp::dispatch_file(int, mxArray_tag**, int, mxArray_tag**)(0xb7083310, 0, 0x074bfd84, 1) + 53 bytes
  [56] libmwm_dispatcher.so:Mfh_file::dispatch_fh(int, mxArray_tag**, int, mxArray_tag**)(0xb7083310, 0, 0x074bfd84, 1) + 281 bytes
  [57] libmwm_interpreter.so:inCallFcn(0, 0x074bfd84, 1, 0x074bfea4) + 115 bytes
  [58] libmwmcr.so:mcrInstanceInternal::CallMATLABFunction0(char const*, int, Mvalue_common<Mimplementation>**, int, Mvalue_common<Mimplementation>**)(0x08f0c5d0, 0x08048a30 "hierarchicalClusteringForExecuta..", 0, 0xbf8a2460) + 221 bytes
  [59] libmwmcr.so:mcr_event_handler(int)(0xbf8a2270, 0x074c0168, 96, 0x06a58a24) + 187 bytes
  [60] libmwuix.so:HandleUserEventCallback(0xb75608f0, 0, 0x074c01d8, 0x0160ea6e) + 59 bytes
  [61] libmwuix.so:UIX_AfterDispatchEvent(bool)(0, 15, 0x074c0208, 0) + 248 bytes
  [62] libmwuix.so:uix_DispatchOrProcess(_XEvent*, _XtAppStruct*, int, bool)(0, 0x08a62f88, 15, 0) + 127 bytes
  [63] libmwuix.so:UIX_AppProcessEvent(0x08a62f88, 15, 0x074c02f8, 0x089c0b24) + 40 bytes
  [64] libmwuix.so:ws_ProcessPendingEventsMainLoop(int, int, bool)(0, 0xffffffff, 0, 0x08c29890) + 214 bytes
  [65] libmwuix.so:ws_ProcessPendingEvents(int, int)(0, 0xffffffff, 0x074c0390, 1302800) + 147 bytes
  [66] libmwservices.so:svWS_ProcessPendingEvents(0, 0xffffffff, 0, 0x08a44914 "/export/research/matlock/matlab7..") + 39 bytes
  [67] libmwmcr.so:run_init_and_handle_events(void*)(0xbf8a23d0 ", 0x074c0480 ", 0x074c0480 ", 0x074c0480 ") + 252 bytes
  [68] libpthread.so.0:0x00b4149b(0x074c0b90, 0, 0, 0)

Please follow these steps in reporting this problem to The MathWorks so
that we have the best chance of correcting it:

  1. Send this crash report to segv@mathworks.com for automated analysis.
     For your convenience, this information has been recorded in:
       /users/anshula/matlab_crash_dump.13613

  2. Also, if the problem is reproducible, send the crash report to
     support@mathworks.com along with:
       - A specific list of steps that will reproduce the problem
       - Any M, MEX, MDL or other files required to reproduce the problem
       - Any error messages displayed to the command window
     A technical support engineer will contact you with further information.

Thank you for your assistance.  Please save your workspace and restart
MATLAB before continuing your work.


------------------------------------------------------------------------
       Segmentation violation detected at Sun Sep  6 02:50:15 2009
------------------------------------------------------------------------

Configuration:
  MATLAB Version:   7.1.0.183 (R14) Service Pack 3
  MATLAB License:   unknown
  Operating System: Linux 2.6.18-128.7.1.el5 #1 SMP Mon Aug 24 08:20:55 EDT 2009 i686
  Window System:    The X.Org Foundation (70101000), display :0.0
  Current Visual:   0x23 (class 4, depth 24)
  Processor ID:     x86 Family 15 Model 4 Stepping 3, GenuineIntel
  Virtual Machine:  Java 1.6.0_01 with Sun Microsystems Inc. Java HotSpot(TM) Client VM mixed mode, sharing
  Default Charset:  UTF-8

Register State:
  eax = 00000015   ebx = 012e60cc
  ecx = 005d0c24   edx = 08be88c0
  esi = 00000001   edi = 074be640
  ebp = 074bfaf8   esp = 074bfad0
  eip = 0105ac98   flg = 00210202

Stack Trace:
  [0] libmwm_interpreter.so:(anonymous namespace)::inPrtlineErrMsg(int)(21, 6, 0xb7083310, 0x074bfb20) + 72 bytes
  [1] libmwm_interpreter.so:(anonymous namespace)::Mfun_call_context::~Mfun_call_context()(0x074bfb80, 0, 0xb7083310, 1) + 784 bytes
  [2] libmwm_interpreter.so:inWordsj(0, 0x074bfd84, 1, 0x074bfea4) + 778 bytes
  [3] libmwm_interpreter.so:Mfh_mp::dispatch_file(_mdUnknown_workspace*, int, mxArray_tag**, int, mxArray_tag**)(0xb7083310, 0, 0, 0x074bfd84) + 389 bytes
  [4] libmwm_interpreter.so:Mfh_mp::dispatch_file(int, mxArray_tag**, int, mxArray_tag**)(0xb7083310, 0, 0x074bfd84, 1) + 53 bytes
  [5] libmwm_dispatcher.so:Mfh_file::dispatch_fh(int, mxArray_tag**, int, mxArray_tag**)(0xb7083310, 0, 0x074bfd84, 1) + 281 bytes
  [6] libmwm_interpreter.so:inCallFcn(0, 0x074bfd84, 1, 0x074bfea4) + 115 bytes
  [7] libmwmcr.so:mcrInstanceInternal::CallMATLABFunction0(char const*, int, Mvalue_common<Mimplementation>**, int, Mvalue_common<Mimplementation>**)(0x08f0c5d0, 0x08048a30 "hierarchicalClusteringForExecuta..", 0, 0xbf8a2460) + 221 bytes
  [8] libmwmcr.so:mcr_event_handler(int)(0xbf8a2270, 0x074c0168, 96, 0x06a58a24) + 187 bytes
  [9] libmwuix.so:HandleUserEventCallback(0xb75608f0, 0, 0x074c01d8, 0x0160ea6e) + 59 bytes
  [10] libmwuix.so:UIX_AfterDispatchEvent(bool)(0, 15, 0x074c0208, 0) + 248 bytes
  [11] libmwuix.so:uix_DispatchOrProcess(_XEvent*, _XtAppStruct*, int, bool)(0, 0x08a62f88, 15, 0) + 127 bytes
  [12] libmw