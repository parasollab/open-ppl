//*****************************************************************************
// The following is the pViews component of STAPL, along with the detailed
// descriptions and subsections.  All subsections should appear in the desired
// order of appearance, and are defined by @defgroup.  Source code that belongs
// in a section or subsection should indicate as such with @addtogroup.
//*****************************************************************************

/**
 * @defgroup pViews pViews
* \b OVERVIEW
*
* A \e pView encapsulates the information about the collection
* of elements it represents, the elements that can be accessed
* through it, and provides a set of operations to interact
* with the data.  It also encodes information about the partition
* of the data, which allows it to operate in a distributed
* environment.

* \b IMPLEMENTATION
*
* The pViews currently implemented in STAPL are
* array_view, vector_view, list_view, map_view,
* multi_array_view, array_ro_view, heap_view,
* graph_view, undirected_view, hgraph_view, lazy_graph_view,
* overlap_view, repeated_view, counting_view, functor_view,
* strided_view, reverse_view, filter_view, transform_view,
* native_view, balance_view, explicit_view, segmented_view,
* zip_view, cross_view, system_view, mapping_view, partitioning_view.
* Each adheres to a common interface.
**/


/**
 * @ingroup pViews
 * @defgroup coreview Base Parallel View
 * \b core_view
 *
 * The core_view is the base class for all pViews available in
 * STAPL.
 *
 * \b read_write
 *
 * The read_write class provides operations to read and write values
 * for a given element identifier.  It applies the view's mapping function
 * to the specified identifier before the request is forwarded to the
 * underlying collection.
 *
 * \b sequence
 *
 * The sequence class provides support for iterators.  It provides
 * begin(), end(), and required types.
 *
 * \b subscript
 *
 * The subscript class provides support for the square-bracket operator
 * This operator returns a reference to an element, rather a copy of the value.
 **/


// Views Framework

//////////////////////////////////////////////////////////////////////
/// @ingroup pViews
/// @defgroup pvf Parallel View Framework
/// @brief Base classes that facilitate the development of new parallel
/// views.
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
/// @ingroup pvf
/// @defgroup pvfTraits Traits Component Customization
/// @brief Classes that specify customizable types that control view
/// behavior, and may be changed for a given view instance.
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup pvf
/// @defgroup validators Validators for versioning
/// @brief Validators used for view versioning.
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// base class
/// @ingroup pViews
/// @defgroup core_view Core
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup pViews
/// @defgroup views_model_adt Model abstract data types
/// @brief Model common abstract data types
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup pViews
/// @defgroup views_model_graph Model graph abstract data types
/// @brief Model graph abstract data types
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup pViews
/// @defgroup views_no_storage Use no storage
/// @brief Present data without using concrete storage
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup pViews
/// @defgroup views_modify_values Modify values of containers
/// @brief Modify values retrieved from underlying view or container
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup pViews
/// @defgroup views_composition Compose views
/// @brief Compose views with other views
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup pViews
/// @defgroup distribution_views Specify a data distribution
/// @brief Allow specification of an arbitrary data distribution
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup pViews
/// @defgroup views_modify_distrib Modify distributions of containers
/// @brief Modify distributions of underlying container
//////////////////////////////////////////////////////////////////////


// model common ADT's

//////////////////////////////////////////////////////////////////////
/// @ingroup views_model_adt
/// @defgroup array_view Array
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_model_adt
/// @defgroup vector_view Vector
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_model_adt
/// @defgroup list_view List
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_model_adt
/// @defgroup map_view Map
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_model_adt
/// @defgroup multi_array_view MultiArray
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_model_adt
/// @defgroup array_ro_view ArrayRO
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_model_adt
/// @defgroup heap_view Heap
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_model_adt
/// @defgroup set_view Set
//////////////////////////////////////////////////////////////////////


// model graph ADT's

//////////////////////////////////////////////////////////////////////
/// @ingroup views_model_graph
/// @defgroup graph_view Graph
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_model_graph
/// @defgroup undirected_view Undirected
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_model_graph
/// @defgroup hgraph_view HGraph
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_model_graph
/// @defgroup lazy_graph_view LazyGraph
//////////////////////////////////////////////////////////////////////


// no concrete storage

//////////////////////////////////////////////////////////////////////
/// @ingroup views_no_storage
/// @defgroup overlap_view Overlap
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_no_storage
/// @defgroup repeated_view Repeated
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_no_storage
/// @defgroup counting_view Counting
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_no_storage
/// @defgroup functor_view Functor
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup distribution_views
/// @defgroup system_view System
/// @brief A set of location ids on to which partition ids may be mapped
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup distribution_views
/// @defgroup mapping_view Mapping
/// @brief View to map partitions to location ids
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup distribution_views
/// @defgroup partitioning_view Partitioning
/// @brief View that maps element ids to partition ids
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup distribution_views
/// @defgroup distribution_specs Distribution Specifications
/// @brief A collection of functions that create view-based specifications
/// of common data distributions.
//////////////////////////////////////////////////////////////////////


// modify values

//////////////////////////////////////////////////////////////////////
/// @ingroup views_modify_values
/// @defgroup strided_view Strided
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_modify_values
/// @defgroup reverse_view Reverse
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_modify_values
/// @defgroup filter_view Filter
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_modify_values
/// @defgroup transform_view Transform
//////////////////////////////////////////////////////////////////////


// modify distributions

//////////////////////////////////////////////////////////////////////
/// @ingroup views_modify_distrib
/// @defgroup native_view Native
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_modify_distrib
/// @defgroup balance_view Balance
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_modify_distrib
/// @defgroup explicit_view Explicit
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_modify_distrib
/// @defgroup segmented_view Segmented
//////////////////////////////////////////////////////////////////////


// compositions

//////////////////////////////////////////////////////////////////////
/// @ingroup views_composition
/// @defgroup zip_view Zip
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
/// @ingroup views_composition
/// @defgroup cross_view Cross
//////////////////////////////////////////////////////////////////////
