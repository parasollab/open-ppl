/*
// Copyright (c) 2000-2009, Texas Engineering Experiment Station (TEES), a
// component of the Texas A&M University System.

// All rights reserved.

// The information and source code contained herein is the exclusive
// property of TEES and may not be disclosed, examined or reproduced
// in whole or in part without explicit written authorization from TEES.
*/


#ifndef STAPL_RUNTIME_CONFIG_TYPES_HPP
#define STAPL_RUNTIME_CONFIG_TYPES_HPP

#include <cstdint>

namespace stapl {

//////////////////////////////////////////////////////////////////////
/// @brief Process id type.
///
/// @ingroup ARMI
//////////////////////////////////////////////////////////////////////
typedef int process_id;


//////////////////////////////////////////////////////////////////////
/// @brief Level type.
///
/// @ingroup ARMI
//////////////////////////////////////////////////////////////////////
typedef std::uint8_t level_type;


namespace runtime {

//////////////////////////////////////////////////////////////////////
/// @brief Location id type.
///
/// @ingroup runtimeMetadata
//////////////////////////////////////////////////////////////////////
typedef std::uint32_t location_id;


//////////////////////////////////////////////////////////////////////
/// @brief Gang id type.
///
/// @ingroup runtimeMetadata
//////////////////////////////////////////////////////////////////////
typedef std::uint32_t gang_id;


//////////////////////////////////////////////////////////////////////
/// @brief RMI nesting level type.
///
/// @ingroup runtimeMetadata
//////////////////////////////////////////////////////////////////////
typedef std::uint16_t nesting_level;


//////////////////////////////////////////////////////////////////////
/// @brief Magic number that disambiguates between different deeply-nested RMIs.
///
/// @ingroup runtimeMetadata
//////////////////////////////////////////////////////////////////////
typedef std::uint8_t magic_id;


//////////////////////////////////////////////////////////////////////
/// @brief Raw affinity tag type.
///
/// @ingroup runtimeMetadata
//////////////////////////////////////////////////////////////////////
typedef std::uint32_t internal_affinity_tag;


//////////////////////////////////////////////////////////////////////
/// @brief Registered object id type.
///
/// @warning This type has to always be able to store a pointer.
///
/// @ingroup runtimeMetadata
//////////////////////////////////////////////////////////////////////
typedef std::uintptr_t object_id;


//////////////////////////////////////////////////////////////////////
/// @brief Collective operation id type.
///
/// @ingroup runtimeMetadata
//////////////////////////////////////////////////////////////////////
typedef object_id collective_id;

} // namespace runtime

} // namespace stapl

#endif
