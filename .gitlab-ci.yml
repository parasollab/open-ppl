image: illario/pmpl:latest

stages:
- build
- test
- deploy

build:
  stage: build
  tags:
    - linux
  only:
    - ari-merge
  variables:
    VCPKG_BINARY_CACHE_PATH: $CI_PROJECT_DIR/vcpkg_cache
    VCPKG_ROOT: $CI_PROJECT_DIR/vcpkg
    VCPKG_DIR: /opt/vcpkg/scripts/buildsystems/vcpkg.cmake
  script:
    - cmake -B build -S . -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=$VCPKG_DIR -DCODE_COVERAGE=ON
#    - cmake --build build
    - cmake --build build --target generate_doxygen_docs
    - cmake --build build --target tests
  timeout: 3 hours
  cache:
    key: vcpkg-cache
    paths:
      - vcpkg_cache/
  artifacts:
    paths:
      - build/.ninja_log
      - build/docs/Doxygen/html

unit-test-job:
  stage: test
  dependencies:
    - build
  tags:
    - linux
  only:
    - ari-merge
    - release-stage-one
  script:
    - cd build
    - ls

strategy-test-job:
  stage: test
  dependencies:
    - build
  tags:
    - linux
  only:
    - ari-merge
    - release-stage-one
  script:
    - cmake -B build -S . -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=$VCPKG_DIR -DCODE_COVERAGE=ON
    - cmake --build build --target tests
    - cd build
    - ./ppl_tests -F BasicTests
    - lcov --capture --directory . --output-file coverage.info
    - lcov --remove coverage.info '/usr/*' --output-file coverage.filtered.info
    - lcov --list coverage.filtered.info
  artifacts:
    reports:
      coverage_report:
        path: build/coverage.filtered.info

publish-doc-job:
  stage: deploy
  tags:
    - linux
  when: manual
  only:
    - ari-merge
    - release-stage-one
  script:
    - ls

create_package:
  stage: deploy
  when: manual
  tags:
    - linux
  script:
    - conan remote add gitlab https://gitlab.engr.illinois.edu/api/v4/projects/25350/packages/conan
    - conan new pmpl/1.0.0 -t
    - conan create . parsol+pmpl+ppl/stable
    - CONAN_LOGIN_USERNAME=conan_pat CONAN_PASSWORD=${CI_JOB_TOKEN} conan upload pmpl/1.0.0@parasol-group+parsol+pmpl/stable --all --remote=gitlab
  environment: production
