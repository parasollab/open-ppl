# $Id$
#------------------------------------------------------
# Make your own and use it or use the one in BASELINE
#------------------------------------------------------
   BINDING_DIR = .
   BINDING_LIB = -L${BINDING_DIR} -lbinding

# -- for dynamic shared object library libobprm.so
   OBPRM_DIR   = /research/sunburn/dsmft/OBPRM-libs
   OBPRM_LIB   = -L${OBPRM_DIR}/linux -lobprm
   OBPRM_INCL  = -I${OBPRM_DIR}/include

#------------------------------------------------------
# Basic defns; do not change
#------------------------------------------------------

#-----------------------------------------------------------------------------
# collision detection packages available
#--------------------------------------------------------------------------

 CD_DIR = /research/sunburn/dsmft/CD-libs/linux

 VCLIP_DIR     = ${CD_DIR}/VCLIP
 VCLIPLIB_DIR  = ${VCLIP_DIR}/lib
 VCLIPLIB      = -L${VCLIPLIB_DIR} -lvclip
 VCLIP_INCL    = -I${VCLIP_DIR}/include

 RAPID_DIR     = ${CD_DIR}/RAPID
 RAPIDLIB_DIR  = ${RAPID_DIR}
 RAPIDLIB      = -L${RAPIDLIB_DIR} -lRAPID
 RAPID_INCL    = -I${RAPID_DIR}


#-----------------------------------------------------------------------------
# Defines for various types of executables
#	VERBOSE  for printing out all kinds of babble for debugging
#       INTERMEDIATE_FILES for creating intermediate "*.path" files
#--------------------------------------------------------------------------
   ADEFS = -DVERBOSE=0 -DINTERMEDIATE_FILES=1 -DCHECKIFSAMECC=1  -DUSE_RAPID -DUSE_VCLIP

### DEFS = ${ADEFS} -DQUIETGRAPH -DQUIET
    DEFS = ${ADEFS} 

showdefs :: 
	echo "${DEFS}";


 AFLAGS    = -I. ${OBPRM_INCL} ${STL_INCL} ${CSTK_INCL} ${VCLIP_INCL} ${RAPID_INCL} ${DEFS}


#-----------------------------------------------------------------------------
# Choose a compiler & its options
#--------------------------------------------------------------------------
 CC = g++
#CC = /pub/gnu_sgi/bin/g++

CXX = ${CC}

# -- for development on TERMINATOR (can't seem to use it better due to cstk)
   OPTS = -g -O2 -fexceptions
#  OPTS = -o32 -O1 -show -ptv 
# -- optimized (our O2's) (slow_compile/good_code) --
#  OPTS =  -o32 -O2 -OPT:Olimit=0 -show

#  DEPS = 
   DEPS = -MMD #Dependencies 

# -- warnings (default, full, none) --
#  CWARNS = 
#  CWARNS = -fullwarn
   CWARNS = -w

CFLAGS     = $(OPTS) $(AFLAGS) $(DEPS) $(CWARNS)
CXXFLAGS   = $(CFLAGS) 
DSOFLAGS   = $(CFLAGS) -shared # -no_unresolved

#-----------------------------------------------------------------------------
# Build 
#--------------------------------------------------------------------------

#--------------------------------------------------------------------
deps:: 
	touch Dependencies

libs:: objs libbinding.so

libbinding.so:: $(OBJS)
	$(CXX) -o libbinding.so $(DSOFLAGS) $(OBJS)

#--------------------------------------------------------------------
binding:: main_binding.c libs
	$(CXX) $(CXXFLAGS) -o binding \
                main_binding.c \
               $(BINDING_LIB) $(OBPRM_LIB) $(MATHLIB) $(CSTKLIB) ${VCLIPLIB} ${RAPIDLIB}
	rm -f main_binding.o main_binding.d

#--------------------------------------------------------------------
#obprm:: main_obprm.c libs
#	$(CXX) $(CXXFLAGS) -o obprm \
#                main_obprm.c \
#		$(BINDING_LIB) $(OBPRM_LIB) $(MATHLIB) $(CSTKLIB) ${VCLIPLIB} ${RAPIDLIB} 
#	rm -f main_obprm.o main_obprm.d
#
#--------------------------------------------------------------------
#query:: main_query.c libs
#	$(CXX) $(CXXFLAGS) -o query \
#                main_query.c \
#                $(BINDING_LIB) $(OBPRM_LIB) $(MATHLIB) $(CSTKLIB) ${VCLIPLIB} ${RAPIDLIB}
#	rm -f main_query.o main_query.d
#
#--------------------------------------------------------------------
.SUFFIXES: .c
.c.o:
	$(CXX) ${CXXFLAGS} -c $<
	cat $*.d >> Dependencies
	rm -f $*.d

% :: %.o
	$(CXX) $(CXXFLAGS) -o $@ $< $(OBPRM_LIB) $(MATHLIB) $(CSTKLIB) ${VCLIPLIB} ${RAPIDLIB}

#--------------------------------------------------------------------
OBJS = \
        MyInput.o \
	DynamicsLocalPlanners.o \
	BioPotentials.o \
	MyQuery.o \
	CfgLigand.o \
	PotentialForceGrids.o \
	MyDistanceMetrics.o \
	GradientDecent.o

objs:: $(OBJS)

#--------------------------------------------------------------------
runclean::
	rm -f mapnodes.*
	rm -f *.map
	rm -f *.path

clean::
	rm -f query
	rm -f obprm

reallyclean::
	rm -f query
	rm -f obprm
	rm -f *.a *.so *.o
	rm -R -f ii_files
	rm -f so_locations
	rm -f Dependencies
	touch Dependencies

#-----------------------------------------------------------------------------
# Build and update dependencies
#-----------------------------------------------------------------------------

Dependencies::
	echo >Dependencies "#-*- Makefile -*-"

include Dependencies

