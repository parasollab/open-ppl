#ifndef GAUSSIAN_SAMPLER_H_
#define GAUSSIAN_SAMPLER_H_

#include "SamplerMethod.h"

////////////////////////////////////////////////////////////////////////////////
/// "The Gaussian sampling strategy for probabilistic roadmap planners" 
///  V.Boor, M.H. Overmars, A.H. van der Stappen. 
///
/// The default behavior is the above standard gaussian sampling. 
/// However, this class provides internal (non-XML) functionality to
///   perform gaussian sampling with other options.
///
/// @ingroup Samplers
/// @brief Gaussian-distribution based sampling. 
////////////////////////////////////////////////////////////////////////////////
class GaussianSampler : public SamplerMethod {

  public:

    GaussianSampler(string _vcLabel = "", string _dmLabel = "",
        double _d = 0.5, bool _useBoundary = false);

    GaussianSampler(XMLNode& _node);

    void ParseXML(XMLNode& _node);

    virtual void Print(ostream& _os) const;

    virtual bool Sampler(Cfg& _cfg, const Boundary* const _boundary,
        vector<Cfg>& _result, vector<Cfg>& _collision);

    // Functions to change parameters that can't be controlled on XML.
    void ChangeGaussianParams(double newMean, double newStd);
    void ReturnNewSamplesOnly(bool setting);

  private:
    // from XML.
    double m_d;  //Gaussian d-value obtained from distribution
    bool m_useBoundary;  //Use Bbox as an obstacle?
    string m_vcLabel, m_dmLabel;

    // Non-XML: For if we wish to internally override mean and standard deviation:
    double mean;
    double std;
    // if we want only the new samples generated by the normal distribution. no means. 
    bool newSamplesOnly{false}; 
};

#endif
