<?xml version='1.0' encoding='UTF-8'?>
<MotionPlanning warnings="true" warningsAsErrors="true" print="false">
  <Problem>
    <Environment filename="../Envs/2D/2d.env" saveDofs="false"/>
    <Robot label="boxy" filename="../Envs/2D/boxy.robot"/>

    <Task label="query" robot="boxy">
      <StartConstraints>
        <CSpaceConstraint point="-10 -10"/>
      </StartConstraints>

      <GoalConstraints>
        <CSpaceConstraint point="10 10"/>
      </GoalConstraints>
    </Task>
  </Problem>

  <Library>
    <DistanceMetrics>
      <Euclidean label="euclidean"/>
    </DistanceMetrics>

    <ValidityCheckers>
      <CollisionDetection label="pqp_solid" method="PQP_SOLID"/>
      <AlwaysTrueValidity label="alwaysTrue"/>
    </ValidityCheckers>

    <NeighborhoodFinders>
      <BruteForceNF label="BFNF" dmLabel="euclidean" unconnected="false" k="10"/>
    </NeighborhoodFinders>

    <Samplers>
      <UniformRandomSampler label="UniformRandom" vcLabel="alwaysTrue"/>
      <UniformRandomSampler label="UniformRandomFree" vcLabel="pqp_solid"/>
    </Samplers>

    <LocalPlanners>
      <StraightLine label="sl" binaryEvaluation="true" vcLabel="pqp_solid"/>
      <StraightLine label="slAlwaysTrue" binaryEvaluation="true"
        vcLabel="alwaysTrue"/>
    </LocalPlanners>

    <Connectors>
      <NeighborhoodConnector label="ClosestAlwaysTrue" nfLabel="BFNF"
        lpLabel="slAlwaysTrue" checkIfSameCC="false"/>
    </Connectors>

    <MapEvaluators>
      <LazyQuery label="LazyQuery" fullRecreatePath="false" lpLabel="sl"
        dmLabel="euclidean" vcLabel="pqp_solid" graphSearchAlg="astar"
        deleteNodes="false" numEnhance="10" d="0.5" deleteInvalid="true"
        safeIntervalToolLabel="SI">
        <NodeConnectionMethod method="ClosestAlwaysTrue"/>
        <Resolution mult="27"/>
        <Resolution mult="16"/>
        <Resolution mult="1"/>
      </LazyQuery>
    </MapEvaluators>

    <MPStrategies>
      <BasicPRM label="LazyPRM">
        <Sampler method="UniformRandom" number="1" attempts="1"/>
        <Connector method="ClosestAlwaysTrue"/>
        <Evaluator method="LazyQuery"/>
      </BasicPRM>
    </MPStrategies>

    <MPTools>
      <SafeIntervalTool label="SI" vcLabel="pqp_solid"/>
    </MPTools>

    <Solver mpStrategyLabel="LazyPRM" seed="0"
      baseFilename="../Scratch/LazyPRM"/>

  </Library>
</MotionPlanning>
