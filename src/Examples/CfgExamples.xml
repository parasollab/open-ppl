<?xml version='1.0' encoding='UTF-8'?>
<MotionPlanning warnings="true" warningsAsErrors="true" print="false">

  <!-- Here we specify input files, such as environment and query. The
       'baseFilename in the Problem node is for Simulator stat output only. -->
  <Problem baseFilename="example">

    <Environment filename="3D/3d.env"
      frictionCoefficient="0" gravity="0 0 0"/>

    <Robot label="boxy1" filename="3D/boxy.robot">
      <Agent type="pathfollowing" waypointDm="euclideanPosition"
        waypointThreshold=".05"/>
    </Robot>

    <Robot label="boxy2" filename="3D/boxy.robot">
      <Agent type="pathfollowing" waypointDm="euclideanPosition"
        waypointThreshold=".05"/>
    </Robot>

    <!-- Single query with single robot -->
    <Task label="query" robot="boxy1">
      <StartConstraints>
        <CSpaceConstraint point="0 0 0 0 0 0"/>
      </StartConstraints>

      <GoalConstraints>
        <CSpaceConstraint point="20 5 10 0.2 0.8 0.5"/>
      </GoalConstraints>
    </Task>

    <!-- Multiple queries can be solved in sequence -->
    <!-- <Task label="build" robot="boxy1"></Task>

    <Task label="query1" robot="boxy1">
      <StartConstraints>
        <CSpaceConstraint point="0 0 0 0 0 0"/>
      </StartConstraints>
      <GoalConstraints>
        <CSpaceConstraint point="20 5 10 0.2 0.8 0.5"/>
      </GoalConstraints>
    </Task>

    <Task label="query2" robot="boxy1">
      <StartConstraints>
        <CSpaceConstraint point="20 5 10 0.2 0.8 0.5"/>
      </StartConstraints>
      <GoalConstraints>
        <CSpaceConstraint point="0 0 0 0 0 0"/>
      </GoalConstraints>
    </Task>

    <Task label="query3" robot="boxy1">
      <StartConstraints>
        <CSpaceConstraint point="0 0 0 0 0 0"/>
      </StartConstraints>
      <GoalConstraints>
        <CSpaceConstraint point="20 5 10 0.8 0.5 0.2"/>
      </GoalConstraints>
    </Task> -->


    <!-- Group task defines start and goal constraints for multiple robots -->
    <!--
    <RobotGroup label="2-robotGroup" robotLabels="boxy1 boxy2"/>

    <GroupTask label="2-groupQuery" group="2-robotGroup">
      <Task label="query1" robot="boxy1">
        <StartConstraints>
          <CSpaceConstraint point="0 0 0 0 0 0"/>
        </StartConstraints>
        <GoalConstraints>
          <CSpaceConstraint point="20 5 10 0.2 0.8 0.5"/>
        </GoalConstraints>
      </Task>
      <Task label="query2" robot="boxy2">
        <StartConstraints>
          <CSpaceConstraint point="20 5 10 0.2 0.8 0.5"/>
        </StartConstraints>
        <GoalConstraints>
          <CSpaceConstraint point="0 0 0 0 0 0"/>
        </GoalConstraints>
      </Task>
    </GroupTask>
    -->

  </Problem>

  <!-- Set available algorithms and parameters. -->
  <Library>

    <DistanceMetrics>
      <Euclidean label="euclidean"/>
      <Manhattan label="manhattan"/>
      <Minkowski label="minkowski" r1="3.0" r2="3.0" r3="0.333"
        normalize="false"/>
    </DistanceMetrics>

    <ValidityCheckers>
      <CollisionDetection label="rapid" method="RAPID"/>
      <CollisionDetection label="pqp" method="PQP"/>
      <CollisionDetection label="pqp_solid" method="PQP_SOLID"/>
      <CollisionDetection label="bounding_spheres" method="BoundingSpheres"/>
      <AlwaysTrueValidity label="alwaysTrue"/>
    </ValidityCheckers>

    <NeighborhoodFinders>
      <BruteForceNF label="BFNF" dmLabel="euclidean" unconnected="false" k="10"/>
      <BruteForceNF label="Nearest" dmLabel="euclidean" unconnected="false"
        k="1"/>
      <BruteForceNF label="BFNFAll" dmLabel="euclidean" k="0"/>
    </NeighborhoodFinders>

    <Samplers>
      <UniformRandomSampler label="UniformRandom" vcLabel="alwaysTrue"/>
      <UniformRandomSampler label="UniformRandomFree" vcLabel="pqp_solid"/>
      <ObstacleBasedSampler label="OBPRM" vcLabel="rapid" useBBX="false"
        pointSelection="cspace" dmLabel="euclidean" stepSize="0.0"
        nShellsColl="0" nShellsFree="1" debug="true"/>
    </Samplers>

    <LocalPlanners>
      <StraightLine label="sl" binaryEvaluation="true" vcLabel="rapid"/>
      <StraightLine label="slAlwaysTrue" binaryEvaluation="true"
        vcLabel="alwaysTrue"/>
    </LocalPlanners>

    <Extenders>
      <BasicExtender label="BERO" debug="true" dmLabel="euclidean"
        vcLabel="rapid" maxDist="4." minDist=".01"/>
      <BasicExtender label="BESO" debug="true" dmLabel="euclidean"
        vcLabel="rapid" maxDist="10." minDist=".001" randomOrientation="false"/>
    </Extenders>

    <PathModifiers>
    </PathModifiers>

    <Connectors>
      <CCsConnector label="ConnectCCs" debug="true"
        nfLabel="BFNF" lpLabel="sl"/>
      <NeighborhoodConnector label="Closest" debug="true"
        nfLabel="BFNF" lpLabel="sl" checkIfSameCC="false"/>
      <NeighborhoodConnector label="ToggleConnect" nfLabel="BFNF" lpLabel="sl"
        maxFailures="1" checkIfSameCC="false"/>
      <NeighborhoodConnector label="ClosestAlwaysTrue" nfLabel="BFNF"
        lpLabel="slAlwaysTrue" checkIfSameCC="false"/>
      <NeighborhoodConnector label="AllToAll" nfLabel="BFNFAll" lpLabel="sl"
        checkIfSameCC="false"/>
    </Connectors>

    <Metrics>
      <NumNodesMetric label="NumNodes"/>
      <NumEdgesMetric label="NumEdges"/>
      <TimeMetric label="TimeInSec"/>
    </Metrics>

    <MapEvaluators>
      <QueryMethod label="Query" debug="true"
        graphSearchAlg="dijkstras" safeIntervalToolLabel="SI"/>
      <LazyQuery label="LazyQuery" debug="true"
        vcLabel="pqp_solid" lpLabel="sl" enhanceDmLabel="euclidean"
        numEnhance="10" d="0.5" deleteInvalid="true">
        <NodeConnectionMethod label="ClosestAlwaysTrue"/>
        <Resolution mult="27"/>
        <Resolution mult="16"/>
        <Resolution mult="1"/>
      </LazyQuery>
      <PrintMapEvaluation label="PrintMap" base_name="Basic"/>
      <ConditionalEvaluator label="NodesEval" metric_method="NumNodes"
        value="1000" operator=">="/>
      <ConditionalEvaluator label="EdgesEval" metric_method="NumEdges"
        value="1000" operator=">"/>
      <ConditionalEvaluator label="FreqNodeEval" metric_method="NumNodes"
        value="50" operator="%"/>
      <ComposeEvaluator label="BoundedQuery" operator="or">
        <Evaluator label="NodesEval"/>
        <Evaluator label="Query"/>
      </ComposeEvaluator>
      <ComposeEvaluator label="MinimumLazyQuery" operator="and">
        <Evaluator label="LazyQuery"/>
        <Evaluator label="NodesEval"/>
      </ComposeEvaluator>
      <TimeEvaluator label="TimeEval" timeout="10"/>
      <GroupQuery label = "CompositeQuery"/>
    </MapEvaluators>

    <MPStrategies>

      <!-- Basic PRM where num samples is based on Number -->
      <BasicPRM label="PRM-build" debug="true" querySampler="UniformRandomFree">
        <Sampler label="UniformRandomFree" number="10" attempts="1"/>
        <!--Sampler Method="OBPRM" number="10" attempts="10"/-->
        <Connector label="Closest"/>
        <!--Connector label="ConnectCCs"/-->
        <Evaluator label="NodesEval"/>
      </BasicPRM>

      <!-- Basic PRM where num samples is based on Number -->
      <BasicPRM label="PRM-query" debug="true" querySampler="UniformRandomFree">
        <Sampler label="UniformRandomFree" number="10" attempts="1"/>
        <!--Sampler Method="OBPRM" number="10" attempts="10"/-->
        <Connector label="Closest"/>
        <!--Connector label="ConnectCCs"/-->
        <Evaluator label="Query"/>
      </BasicPRM>

      <!-- Basic PRM restarted from an input roadmap input.map. -->
      <BasicPRM label="BasicPRM2"
        inputMap="input.map">
        <Sampler label="UniformRandomFree" number="10" attempts="10"/>
        <Connector label="Closest"/>
        <Evaluator label="NodesEval"/>
      </BasicPRM>

      <!-- LazyPRM -->
      <BasicPRM label="LazyPRM" debug="true">
        <Sampler label="UniformRandom" number="1" attempts="1"/>
        <Connector label="ClosestAlwaysTrue"/>
        <Evaluator label="LazyQuery"/>
      </BasicPRM>

      <!-- Basic RRT -->
      <BasicRRTStrategy label="RRT" debug="true"
        querySampler="UniformRandomFree" samplerLabel="UniformRandom"
        nfLabel="Nearest" extenderLabel="BERO"
        growGoals="false" growthFocus="0.01" m="1"
        goalDmLabel="euclidean" goalThreshold="5">
        <Evaluator label="Query"/>
      </BasicRRTStrategy>

      <!-- Toggle PRM -->
      <TogglePRMStrategy label="TogglePRM" vcLabel="pqp_solid" priority="true">
        <Sampler label="UniformRandomFree" number="10" attempts="1"/>
        <Connector label="Closest"/>
        <ColConnector label="ToggleConnect"/>
        <Evaluator label="Query"/>
      </TogglePRMStrategy>

      <!-- Strategy Sequence -->
      <StrategySequence label="Sequence" debug="true">
        <StrategyMethod label="PRM-build" task="build" path="false"/>
        <StrategyMethod label="PRM-query" task="query1" path="true"/>
        <StrategyMethod label="PRM-query" task="query2" path="true"/>
        <StrategyMethod label="PRM-query" task="query3" path="true"/>
      </StrategySequence>

      <!-- Group PRM -->
      <GroupPRM label="CompositePRM" querySampler="UniformRandomFree" debug="true">
        <Sampler label="UniformRandomFree" number="10" attempts="1"/>
        <Connector label="Closest"/>
        <Evaluator label = "CompositeQuery"/>
      </GroupPRM>

    </MPStrategies>

    <MPTools>
      <ReebGraphConstruction debug="true" write="false" filename=""/>

      <ClearanceUtility label="clearanceUtil" vcLabel="pqp_solid"
        dmLabel="euclidean" clearanceType="exact" penetrationType="exact"
        useBBX="true" positional="true"/>

      <MedialAxisUtility label="maUtil" vcLabel="pqp_solid"
        dmLabel="euclidean" clearanceType="exact" penetrationType="exact"
        useBBX="true" positional="true"/>

      <SafeIntervalTool label="SI" vcLabel="rapid"/>

    </MPTools>

    <!-- MPProblem allows multiple solvers to be specified and executed. -->

    <Solver mpStrategyLabel="PRM-build" seed="12345678"
      baseFilename="PRM-build" vizmoDebug="true"/>

  </Library>

</MotionPlanning>
