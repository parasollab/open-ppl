<?xml version='1.0' encoding='UTF-8'?>
<MotionPlanning warnings="true" warningsAsErrors="true" print="false">

  <!-- Here we specify input files, such as environment and query. The
       'baseFilename in the Problem node is for Simulator stat output only. -->
  <Problem baseFilename="example">

    <Environment filename="3D/3d.env"
      frictionCoefficient="0" gravity="0 0 0"/>

    <Robot label="boxy" filename="3D/boxy.robot">
      <!--
      <Agent type="planning"/>
      -->
      <Agent type="pathfollowing" waypointDm="euclideanPosition"
        waypointThreshold=".05"/>
    </Robot>

    <!-- WARNING Support for multiple constraints is not yet implemented! -->
    <!-- WARNING Workspace constraints are not finished and untested! -->
    <!-- WARNING CSpace bounding box constraints are supported, but currently
         the query method will just use the bounding box to sample a specific
         goal configuration. -->

    <Task label="query" robot="boxy">
      <StartConstraints>
        <CSpaceConstraint point="0 0 0 0 0 0"/>
      </StartConstraints>

      <GoalConstraints>
        <CSpaceConstraint point="20 5 10 0.2 0.8 0.5"/>
      </GoalConstraints>
    </Task>

  </Problem>

  <!-- Set available algorithms and parameters. -->
  <Library>

    <DistanceMetrics>
      <Euclidean label="euclidean"/>
      <ScaledEuclidean label="scaledEuclidean" scale="0.5"/>
      <WeightedEuclidean label="euclideanPosition" posWeight="1" rotWeight="0"
        velWeight="0" avlWeight="0"/>
      <CenterOfMass label="com"/>
      <KnotTheory label="knot"/>
      <Manhattan label="manhattan"/>
      <Minkowski label="minkowski" r1="3.0" r2="3.0" r3="0.333"
        normalize="false"/>
      <RMSD label="rmsd"/>
      <LPSwept label="LPSwept" posRes="5" oriRes="5" useBBox="true" lpLabel="sl"/>
      <BinaryLPSwept label="BLPSwept" posRes="5" oriRes="5" useBBox="true"
        lpLabel="sl"/>
      <TopologicalDistance label="connectedFreeSpace" operator="sum"
        tmLabel="tm-coarse"/>
    </DistanceMetrics>

    <ValidityCheckers>
      <CollisionDetection label="rapid" method="RAPID"/>
      <CollisionDetection label="pqp" method="PQP"/>
      <CollisionDetection label="pqp_solid" method="PQP_SOLID"/>
      <NodeClearanceValidity label="nc" delta="0.3" nfLabel="Nearest"/>
      <NegateValidity label="nv" vcLabel="rapid"/>
      <MedialAxisClearance label="mac" maClearance="0.5" vcLabel="pqp_solid"
        dmLabel="euclidean" clearanceType="exact" penetrationType="exact"
        useBBX="true" positional="true"/>
      <ComposeValidity label="cv" operator="AND">
        <ValidityChecker label="pqp_solid"/>
        <ValidityChecker label="mac"/>
      </ComposeValidity>
      <AlwaysTrueValidity label="alwaysTrue"/>
      <ObstacleClearance label="oc" clearanceThreshold="1" vcLabel="pqp_solid"/>
    </ValidityCheckers>

    <NeighborhoodFinders>
      <BruteForceNF label="BFNF" dmLabel="euclidean" unconnected="false" k="10"/>
      <BruteForceNF label="Nearest" dmLabel="euclidean" unconnected="false"
        k="1"/>
      <BruteForceNF label="BFNFAll" dmLabel="euclidean" k="0"/>
      <HierarchicalNF label="HierarchicalNF" nfLabel="BFNF" nfLabel2="RandomNF"
        dmLabel=""/>
      <HopLimitNF label="HLNF" hoplimit="2" dmLabel="" nfLabel="BFNF"/>
      <OptimalNF label="OptimalK" nfLabel="BFNF"/>
      <RadiusNF label="RadiusNF" dmLabel="euclidean" radius="5"/>
      <RandomNF label="RandomNF" dmLabel="euclidean" k="5"/>
      <DPESNF label="DPESNF" dmLabel="euclidean" k="5" m="3"/>
      <!--MPNNNF label="BFNF" dmLabel="euclidean" use_rotational="0"
           use_scaling="0"/-->
      <BandsNF label="RbandNF_2bands_4k" debug="false" dmLabel="euclidean">
        <RBand label="first" max = '8' k='8' policy='closest'
          dmLabel="euclidean"/>
        <RBand label="second" min = '8' max = '64' k='8' policy='random'
          dmLabel="euclidean"/>
      </BandsNF>
      <BandsNF label="DbandNF" debug="false" dmLabel="euclidean">
        <DBand label="first" min='.1' max='.3' k='16' policy='closest'
          dmLabel="euclidean"/>
      </BandsNF>
      <TopologicalFilter label="TopologicalNF" nfLabel="BFNF" tmLabel="tm-coarse"
        backtrackDistance="6" debug="false"/>
      <LSHNF label="LSHNF"
        k="8" hashDimension="3" hashFamilies="8" hashRadius="9"
        dmLabel="euclidean"/>
      <KdTreeNF label="KdTreeNF"
        k="5" epsilon=".01" useScaling="true"
        dmLabel="euclidean"/>
    </NeighborhoodFinders>

    <Samplers>
      <UniformRandomSampler label="UniformRandom" vcLabel="alwaysTrue"/>
      <UniformRandomSampler label="UniformRandomFree" vcLabel="pqp_solid"/>
      <ObstacleBasedSampler label="OBPRM" vcLabel="rapid" useBBX="false"
        pointSelection="cspace" dmLabel="euclidean" stepSize="0.0"
        nShellsColl="0" nShellsFree="1" debug="false"/>
      <GaussianSampler label="Gauss" vcLabel="rapid" d="0.2" dmLabel="euclidean"
        useBBX="false"/>
      <BridgeTestSampler label="Bridge" vcLabel="rapid" d="0.2"
        dmLabel="euclidean" useBBX="true"/>
      <MedialAxisSampler label="MAPRM" vcLabel="pqp_solid" dmLabel="euclidean"
        clearanceType="exact" penetrationType="exact"
        useBBX="true" debug="false" positional="true"/>
      <GridSampler label="Grid" vcLabel="pqp_solid" ticks="10 10 10"
        debug="false"/>
      <MixSampler label="MixSampler">
        <Sampler label="UniformRandomFree" p="0.8"/>
        <Sampler label="UniformRandom" p="0.2"/>
      </MixSampler>
      <UniformObstacleBasedSampler label="UOBPRM" vcLabel="rapid" useBBX="false"
        dmLabel="euclidean" d="0.02" />
      <UniformMedialAxisSampler label="UMAPRM" vcLabel="pqp_solid" useBBX="true"
        dmLabel="euclidean" d="2.00" t="10" clearanceType="exact"
        penetrationType="exact" debug="false" positional="true"/>
      <WorkspaceImportanceSampler label="WIS" vcLabel="rapid" alpha="0.2"
        decompositionLabel="fine"/>
      <DynamicRegionSampler label="DynamicRegionSampler"
        samplerLabel="UniformRandom"
        explore=".2" regionFactor="2.5" penetration="1"
        velocityBiasing="false" velocityAlignment=".4" decompositionLabel="fine"/>
    </Samplers>

    <LocalPlanners>
      <StraightLine label="sl" binaryEvaluation="true" vcLabel="rapid"/>
      <StraightLine label="slAlwaysTrue" binaryEvaluation="true"
        vcLabel="alwaysTrue"/>
      <RotateAtS label="ras" binaryEvaluation="true" vcLabel="rapid" s="0.5"
        saveIntermediates="false"/>
      <TransformAtS label="tas" binaryEvaluation="true" vcLabel="rapid" s="0.5"
        saveIntermediates="false"/>
      <AStarDistance label="asd" vcLabel="rapid" dmLabel="euclidean"
        maxTries="6" numNeighbors="10" histLength="10" debug="true"/>
      <AStarClearance label="asc" vcLabel="pqp_solid" maxTries="6" numNeighbors="3"
        histLength="10" dmLabel="euclidean" clearanceType="exact"
        penetrationType="exact" useBBX="true" positional="true" debug="false"/>
      <MedialAxisLP label="malpr" controller="recursive"
        macEpsilon="0.1" maxIter="10"
        vcLabel="pqp_solid" dmLabel="euclidean"
        clearanceType="exact" penetrationType="exact" useBBX="true"
        positional="true"
        debug="true" saveIntermediates="true"/>
      <MedialAxisLP label="malpi" controller="iterative"
        resFactor="20" maxIter="100"
        vcLabel="pqp_solid" dmLabel="euclidean"
        clearanceType="exact" penetrationType="exact" useBBX="true"
        positional="true"
        debug="true" saveIntermediates="true" maxFailures="100" noProgress="1"
        pathModifier="ShortcuttingPathModifier"/>
      <MedialAxisLP label="malpb" controller="binary"
        resFactor="20" maxIter="100"
        vcLabel="pqp_solid" dmLabel="euclidean"
        clearanceType="exact" penetrationType="exact" useBBX="true"
        positional="true"
        debug="true" saveIntermediates="true"/>
      <ToggleLP label="togglelp" vcLabel="rapid" dmLabel="euclidean"
        lpLabel="sl" maxIter="5"/>
      <ApproxSpheres label="apsph" vcLabel="pqp_solid" dmLabel="euclidean"
        saveIntermediates="false" clearanceType="exact"
        penetrationType="exact"/>
      <HierarchicalLP label="hlp">
        <LocalPlanner method="sl"/>
        <LocalPlanner method="ras"/>
        <LocalPlanner method="malp"/>
      </HierarchicalLP>
    </LocalPlanners>

    <Extenders>
      <BasicExtender label="BERO" debug="false" dmLabel="euclidean"
        vcLabel="rapid" maxDist="1." minDist=".001"/>
      <BasicExtender label="BESO" debug="false" dmLabel="euclidean"
        vcLabel="rapid" maxDist="10." minDist=".001" randomOrientation="false"/>
      <KinodynamicExtender label="KinoExtender" debug="false"
        dmLabel="euclidean" vcLabel="rapid" fixed="false" best="true"
        numSteps="10" minDist=".01"/>
      <MedialAxisExtender label="MAE" maxDist="10.0" minDist="0.01"
        extendDist="0.5" maxIntermediates="10" lpLabel="sl" vcLabel="pqp_solid"
        dmLabel="euclidean" clearanceType="exact" penetrationType="exact"
        useBBX="true" positional="true"/>
      <RandomObstacleVector label="ROVRO" debug="false" dmLabel="euclidean"
        vcLabel="rapid" maxDist="10.0" minDist=".001"/>
      <RandomObstacleVector label="ROVSO" debug="false" dmLabel="euclidean"
        vcLabel="rapid" maxDist="10.0" minDist=".001" randomOrientation="false"/>
      <RotationThenTranslation label="RTT" debug="false" dmLabel="euclidean"
        vcLabel="rapid" maxDist="10.0" minDist=".001"/>
      <TraceCSpaceObstacle label="TCSO" debug="false" dmLabel="euclidean"
        vcLabel="rapid" maxDist="10.0" minDist=".001"/>
      <TraceMAPush label="TMAP" debug="false" dmLabel="euclidean" vcLabel="rapid"
        maxDist="10.0" minDist=".001" clearanceType="exact"
        penetrationType="exact"/>
      <TraceObstacle label="TORO" debug="false" dmLabel="euclidean"
        vcLabel="rapid" maxDist="10.0" minDist=".001"/>
      <TraceObstacle label="TOSO" debug="false" dmLabel="euclidean"
        vcLabel="rapid" maxDist="10.0" minDist=".001" randomOrientation="false"/>
      <MixExtender label="ME">
        <Extender label="BERO" probability="0.1"/>
        <Extender label="BESO" probability="0.1"/>
        <Extender label="ROVRO" probability="0.1"/>
        <Extender label="ROVSO" probability="0.1"/>
        <Extender label="RTT" probability="0.1"/>
        <Extender label="TORO" probability="0.1"/>
        <Extender label="TOSO" probability="0.1"/>
        <Extender label="TCSO" probability="0.1"/>
        <Extender label="TMAP" probability="0.1"/>
      </MixExtender>
    </Extenders>

    <PathModifiers>
      <CombinedPathModifier label="CombinedPathModifier" debug="true">
        <Modifier label="ShortcuttingPathModifier"/>
        <Modifier label="MedialAxisPathModifier"/>
        <Modifier label="ResamplePathModifier"/>
      </CombinedPathModifier>
      <CRetractionPathModifier label="CR" iter="25"
        vcLabel="pqp_solid" dmLabel="euclidean"
        clearanceType="exact" penetrationType="exact"
        useBBX="true" positional="true" debug="false"/>
      <MedialAxisPathModifier label="MAPS"
        pmLabel="SC" lpLabel="sl" malpLabel="malpi" debug="false"/>
      <ResamplePathModifier label="ResamplePathModifier" debug="false"
        typeName="MAX_CLEARANCE" numResamples="1" stepSize="0.3" userValue="0.3"
        vcLabel="pqp_solid" dmLabel="euclidean" lpLabel="sl" clearanceType="exact"
        penetrationType="exact" useBBX="true" positional="true"/>
      <ShortcuttingPathModifier label="ShortcuttingPathModifier" lpLabel="sl"
        debug="false"/>
    </PathModifiers>

    <Connectors>
      <AdaptiveConnector label="AdaptiveCS" nfLabel="" lpLabel="sl"
        percentRandom="0.5" checkIfSameCC="false" debug="false"
        uniformProbability="false" fixedCost="false" fixedReward="false">
        <NeighborFinder Method="BFNF"/>
        <NeighborFinder Method="Nearest"/>
        <NeighborFinder Method="RandomNF"/>
        <NeighborFinder Method="BFNFAll"/>
      </AdaptiveConnector>
      <CCsConnector label="ConnectCCs" nfLabel="BFNF" lpLabel="sl" k="5"/>
      <NeighborhoodConnector label="Closest" nfLabel="BFNF" lpLabel="sl"
        checkIfSameCC="false" debug="false"/>
      <NeighborhoodConnector label="SparkPRMConnector" nfLabel="Nearest"
        lpLabel="sl" checkIfSameCC="true"/>
      <NeighborhoodConnector label="ToggleConnect" nfLabel="BFNF" lpLabel="sl"
        countFailures="true" fail="1" checkIfSameCC="false"/>
      <NeighborhoodConnector label="ClosestAlwaysTrue" nfLabel="BFNF"
        lpLabel="slAlwaysTrue" checkIfSameCC="false"/>
      <NeighborhoodConnector label="AllToAll" nfLabel="BFNFAll" lpLabel="sl"
        checkIfSameCC="false"/>
      <NeighborhoodConnector label="KdTree" nfLabel="KdTreeNF" lpLabel="sl"
        checkIfSameCC="false"/>
      <RewireConnector label="OptimalRewire" nfLabel="OptimalK" lpLabel="sl"/>
    </Connectors>

    <Metrics>
      <NumNodesMetric label="NumNodes"/>
      <NumEdgesMetric label="NumEdges"/>
      <!--
      <CoverageMetricRoadmapSet label="CoverageRoadmapSet" filename="3D/3d.map"
        computeAllCCs="false">
        <Connector label="Closest"/>
      </CoverageMetricRoadmapSet>
      <CoverageDistanceMetricRoadmapSet label="CoverageDistance"
        filename="3D/3d.map" dmLabel="euclidean"/>
      <ConnectivityMetricRoadmapSet label="ConnectivityRoadmapSet"
        filename="3D/3d.map">
        <Connector label="Closest"/>
      </ConnectivityMetricRoadmapSet>
      -->
      <CoverageMetricVectorSet label="CoverageVectorSet" filename="coverage"
        computeAllCCs="false">
        <Connector label="Closest"/>
      </CoverageMetricVectorSet>
      <ConnectivityMetricVectorSet label="ConnectivityVectorSet"
        filename="connectivity">
        <Connector label="Closest"/>
      </ConnectivityMetricVectorSet>
      <DiameterMetric label="Diameter"/>
      <CCDistanceMetric label="CCDistance" dmLabel="euclidean"/>
      <TimeMetric label="TimeInSec"/>
    </Metrics>

    <MapEvaluators>
      <TrueEvaluation label="TrueEvaluator" />
      <QueryMethod label="Query" debug="false"
        graphSearchAlg="dijkstras"/>
      <LazyQuery label="LazyQuery" debug="false"
        lpLabel="sl" dmLabel="euclidean" vcLabel="pqp_solid"
        graphSearchAlg="dijkstras"
        numEnhance="10" d="0.5" deleteInvalid="true">
        <NodeConnectionMethod label="ClosestAlwaysTrue"/>
        <Resolution mult="27"/>
        <Resolution mult="16"/>
        <Resolution mult="1"/>
      </LazyQuery>
      <LazyToggleQuery label="LazyToggleQuery"
        lpLabel="sl" dmLabel="euclidean" vcLabel="rapid"
        graphSearchAlg="dijkstras"
        iterative="true" debug="false">
        <NodeConnectionMethod label="ClosestAlwaysTrue"/>
        <ToggleConnectionMethod label="LazyToggleConnect"/>
        <Resolution mult="27"/>
        <Resolution mult="16"/>
        <Resolution mult="1"/>
      </LazyToggleQuery>
      <PrintMapEvaluation label="PrintMap" base_name="Basic"/>
      <ConditionalEvaluator label="NodesEval" metric_method="NumNodes"
        value="5000" operator=">="/>
      <ConditionalEvaluator label="EdgesEval" metric_method="NumEdges"
        value="1000" operator=">"/>
      <ConditionalEvaluator label="FreqNodeEval" metric_method="NumNodes"
        value="50" operator="%"/>
      <NegateEvaluator label="Neg" evalLabel="NodesEval"/>
      <ComposeEvaluator label="BoundedQuery" operator="or">
        <Evaluator label="NodesEval"/>
        <Evaluator label="Query"/>
      </ComposeEvaluator>
      <TimeEvaluator label="TimeEval" timeout="10"/>
    </MapEvaluators>

    <!-- For **UAStrategy use** -->
    <!--partitioning_methods>
      <Kmeans label="kmeans" destination="uas/">
        <Feature Name="X" Weight="1"/>
        <Feature Name="Y" Weight="1"/>
        <Feature Name="Z" Weight="1"/>
        <Feature Name="visibility" Weight="1"/>
      </Kmeans>
      <Growable label="growable" destination="uas/">
        <Feature Name="visibility" Weight="1"/>
      </Growable>
      <Hierarchical label="hierarchical" destination="uas/">
        <Feature Name="X" Weight="1"/>
        <Feature Name="Y" Weight="1"/>
        <Feature Name="Z" Weight="1"/>
        <Feature Name="visibility" Weight="1"/>
      </Hierarchical>
      <PGmeans label="pgmeans" destination="uas/">
        <Feature Name="X" Weight="1"/>
        <Feature Name="Y" Weight="1"/>
        <Feature Name="Z" Weight="1"/>
        <Feature Name="visibility" Weight="1"/>
      </PGmeans>
      <Successive label="successive" destination="uas/">
        <PartitioningMethod Method="kmeans"/>
        <PartitioningMethod Method="kmeans"/>
      </Successive>
    </partitioning_methods>

    <partitioning_evaluators>
      <AVGEvaluator label="avg" Feature="visibility"/>
      <STDEvaluator label="std" Feature="visibility"/>
    </partitioning_evaluators-->

    <MPStrategies>

      <!-- Basic PRM where num samples is based on Number -->
      <BasicPRM label="BasicPRM1">
        <Sampler label="UniformRandomFree" number="1" attempts="1"/>
        <!--Sampler Method="Gauss" number="10" attempts="10"/-->
        <!--Sampler Method="OBPRM" number="10" attempts="10"/-->
        <!--Sampler Method="MAPRM" number="10" attempts="10"/-->
        <Connector label="Closest"/>
        <!--Connector label="KdTree"/-->
        <!--ComponentConnector label="ConnectCCs"/-->
        <Evaluator label="Query"/>
      </BasicPRM>

      <!-- Basic PRM restarted from an input roadmap input.map at the beginning
           of node connection -->
      <BasicPRM label="BasicPRM2"
        inputMap="input.map" startAt="connecting">
        <Sampler label="UniformRandomFree" number="10" attempts="10"/>
        <Connector label="Closest"/>
        <ComponentConnector label="ConnectCCs"/>
        <Evaluator label="NodesEval"/>
      </BasicPRM>

      <!-- BasicRRT -->
      <BasicRRTStrategy label="BasicRRT" debug="false"
        querySampler="UniformRandomFree" samplerLabel="UniformRandom"
        nfLabel="Nearest" extenderLabel="BERO"
        growGoals="false" growthFocus="0.01" m="1">
        <Evaluator label="Query"/>
      </BasicRRTStrategy>

      <!-- Kindodynamic RRT -->
      <BasicRRTStrategy label="KinoRRT" debug="false"
        querySampler="UniformRandomFree" samplerLabel="UniformRandom"
        nfLabel="Nearest" extenderLabel="KinoExtender"
        growGoals="false" growthFocus="0.01">
        <Evaluator label="Query"/>
      </BasicRRTStrategy>

      <!-- If optimal connection is wanted, the correct connector needs to be
           selected -->
      <BasicRRTStrategy label="RRG"
        querySampler="UniformRandomFree" samplerLabel="UniformRandom"
        nfLabel="Nearest" extenderLabel="BERO" connectorLabel="OptimalConnector"
        growGoals="false" growthFocus="0.01">
        <Evaluator label="NodesEval"/>
      </BasicRRTStrategy>

      <!-- The connector needs to be OptimalRewire for RRT* -->
      <BasicRRTStrategy label="RRTstar"
        querySampler="UniformRandomFree" samplerLabel="UniformRandom"
        growGoals="false" growthFocus="0.01"
        nfLabel="Nearest" extenderLabel="BERO" connectorLabel="OptimalRewire">
        <Evaluator label="NodesEval"/>
      </BasicRRTStrategy>

      <SRTStrategy label="SRT" debug="false"
        samplerLabel="UniformRandomFree"
        lpLabel="sl"  nfLabel="Nearest" exLabel="BERO"
        samples="5" expansions="10" closeCent="1" randCent="2" closePairs="2"
        connIter="5">
        <Evaluator label="Query"/>
      </SRTStrategy>

      <!-- ObstacleBasedRRT -->
      <!-- The extender needs to be MixExtender for OBRRT -->
      <BasicRRTStrategy label="OBRRT" debug="false"
        querySampler="UniformRandomFree" samplerLabel="UniformRandom"
        nfLabel="Nearest" extenderLabel="ME"
        growGoals="true" growthFocus="0.01">
        <Evaluator label="NodesEval"/>
      </BasicRRTStrategy>

      <!-- Adaptive RRT -->
      <!-- Broken, disabled.
      <AdaptiveRRT label="AdaptiveRRT"
        growthFocus="0.01"
        nfLabel="BFNF" vcLabel="rapid" extenderLabel="BERO"
        gamma="0.1" cost="reward" debug="true"
        samplerLabel="UniformRandom">
        <Evaluator label="NodesEval"/>
        <GrowthSet threshold="0.0">
          <Extender label="BERO"/>
          <Extender label="BESO"/>
          <Extender label="ROVRO"/>
        </GrowthSet>
      </AdaptiveRRT>
      -->

      <!-- DynamicDomainRRT -->
      <!--
      <DynamicDomainRRT label="DynamicDomainRRT" debug="false"
        querySampler="UniformRandomFree" samplerLabel="UniformRandom"
        nfLabel="Nearest" extenderLabel="BERO"
        growGoals="false" growthFocus="0.01" r="2">
        <Evaluator label="BoundedQuery"/>
      </DynamicDomainRRT>
      -->

      <!-- DynamicRegionRRT -->
      <BasicRRTStrategy label="DynamicRegionRRT" debug="false"
        querySampler="UniformRandomFree" samplerLabel="DynamicRegionSampler"
        nfLabel="Nearest" extenderLabel="BERO"
        growGoals="false" growthFocus="0.01">
        <Evaluator label="BoundedQuery"/>
      </BasicRRTStrategy>

      <!-- Toggle PRM -->
      <TogglePRMStrategy label="TogglePRM" priority="true">
        <Sampler label="UniformRandomFree" number="10" attempts="1"/>
        <Connector label="Closest"/>
        <ColConnector label="ToggleConnect"/>
        <Evaluator label="Query"/>
      </TogglePRMStrategy>

      <!-- UAStrategy -->
      <!--UAStrategy label="UAPRM" iterations="10" num_samples="10">
        <training_strategy Strategy="PRM1"/>
        <region_identifier Method="kmeans"/>
        <distribution_feature Feature="visibility"/>
        <region_strategy Strategy="Hybrid"/>
        <evaluation_method Method="NodesEval"/>
        <evaluation_method Method="Query"/>
      </UAStrategy-->

      <!-- EvaluateMapStrategy -->
      <EvaluateMapStrategy label="EvaluateMapStrategy">
        <Evaluator label="NodesEval"/>
      </EvaluateMapStrategy>

      <UtilityGuidedGenerator label="UtilityGuided" vcLabel="rapid" nfLabel="BFNF"
        connectorLabel="Closest">
        <Evaluator label="NodesEval"/>
      </UtilityGuidedGenerator>

      <!-- Push Query to MA -->
      <PushQueryToMA label="PushQueryToMA"
        inFilename="3D/3d.query" outFilename="3D/3d.ma.query"
        vcLabel="pqp_solid" dmLabel="euclidean"
        clearanceType="exact" penetrationType="exact" useBBX="true"
        positional="true"/>

      <!-- Modify Path -->
      <ModifyPath label="ModifyPath" pmLabel="CR" pathFile="3D/3d.path"/>

      <!-- LP Compare - Compare edges between two roadmaps. -->
      <LPCompare label="LPCompare" dmLabel="euclidean"
        rdmp1="Map1.map" lpLabel1="sl"
        rdmp2="Map2.map" lpLabel2="malpi"/>

      <!-- MultiStrategy -->
      <MultiStrategy label="MultiStrategy">
        <MPStrategy label="BasicPRM1"/>
        <MPStrategy label="AdaptiveRRT"/>
      </MultiStrategy>

      <!-- Spark PRM Examples -->
      <SparkTogglePRMStrategy label="SparkToggle" maxNPCCSize="2"
        initSamples="10" maxRRTSize="100" attemptRatio="10" delta="5"
        minDist="0.1" vcLabel="rapid" nfLabel="BFNF" nfVertexLabel="Nearest"
        trimDepth="2" dmLabel="euclidean" cLabel="SparkPRMConnector"
        eLabel="BERO" priority="false" growthFocus="0.25" checkEdgeCases="true"
        checkImportant="true" trimAll="true" biasConnect="true"
        rrtDebug="false">
        <Sampler label="UniformRandomFree" number="10" attempts="10"/>
        <Connector label="ToggleConnect"/>
        <ColConnector label="ToggleConnect"/>
        <Evaluator label="Query"/>
      </SparkTogglePRMStrategy>

      <SparkBasicPRM label="SparkUniform" maxNPCCSize="2" initSamples="10"
        maxRRTSize="100" attemptRatio="10" delta="5" minDist="0.1" vcLabel="rapid"
        nfLabel="BFNF" nfVertexLabel="Nearest" trimDepth="2" dmLabel="euclidean"
        cLabel="SparkPRMConnector" eLabel="BERO" growthFocus="0.25"
        checkEdgeCases="true" checkImportant="true" trimAll="true"
        biasConnect="true" rrtDebug="false">
        <Sampler label="UniformRandomFree" number="10" attempts="10"/>
        <Connector label="Closest"/>
        <Evaluator label="Query"/>
      </SparkBasicPRM>

      <!-- Syclop -->
      <!--
      <Syclop label="Syclop" debug="false"
        querySampler="UniformRandomFree" samplerLabel="UniformRandom"
        nfLabel="Nearest" extenderLabel="BERO"
        tmLabel="tm"
        growGoals="false" growthFocus="0.01">
        <Evaluator label="Query"/>
      </Syclop>
      -->

      <!-- Visibility Based PRM Strategy -->
      <VisibilityBasedPRM label="VBPRM" sampler="UniformRandomFree"
        vcLabel="rapid" lpLabel="sl"
        maxFailedIterations="20" debug="false"/>

      <ScratchStrategy label="scratch"/>

    </MPStrategies>

    <MPTools>
      <!-- Example nodes for a workspace decomposition with tetgen. Be aware
           that each decomposition defined will be created immediately upon
           initialization. If you don't need them, comment them out to save
           pre-processing time. These examples would create new decompositions.
      <TetGenDecomposition label="coarse" debug="false" switches="pnQ"/>
      <TetGenDecomposition label="fine" debug="false" switches="pnqQ"/>
      -->

      <!-- The same workspace decomposition nodes, this time reading in from
           saved files like 'coarse.ele' and 'coarse.node'. This is preferred as
           we cannot completely control the randomness in the CGAL functions
           which generate the decompositions. -->
      <TetGenDecomposition label="coarse" debug="false" switches="pnQ"
        io="read" baseFilename="3D/coarse"/>
      <TetGenDecomposition label="fine" debug="false" switches="pnqQ"
        io="read" baseFilename="3D/quality"/>

      <!-- Different objects need to work with different granularities when it
           comes to decomposition-based tools. You can define multiple
           topological maps for this purpose. -->
      <TopologicalMap label="tm-coarse" decompositionLabel="coarse"
        gridSize="1"/>
      <TopologicalMap label="tm-fine" decompositionLabel="fine"
        gridSize="1"/>

      <ReebGraphConstruction debug="false" write="false" filename=""/>

      <ClearanceUtility label="clearanceUtil" vcLabel="pqp_solid"
        dmLabel="euclidean" clearanceType="exact" penetrationType="exact"
        useBBX="true" positional="true"/>

      <MedialAxisUtility label="maUtil" vcLabel="pqp_solid"
        dmLabel="euclidean" clearanceType="exact" penetrationType="exact"
        useBBX="true" positional="true"/>

      <SVMModel kernel="radial" c="10" epsilon=".001" gamma="1"/>

    </MPTools>

    <!-- MPProblem allows multiple solvers to be specified and executed. -->

    <Solver mpStrategyLabel="BasicPRM1" seed="12345678"
      baseFilename="example" vizmoDebug="true"/>

  </Library>

</MotionPlanning>
