<?xml version='1.0' encoding='UTF-8'?>
<MotionPlanning warnings="true" warningsAsErrors="true" print="false">

  <!-- Here we specify input files, such as environment and query. The
       'baseFilename in the Problem node is for Simulator stat output only. -->
  <Problem baseFilename="example">

    <Environment filename="3D/3d.env"
      frictionCoefficient="0" gravity="0 0 0"/>

    <Robot label="boxy" filename="3D/boxy.robot" nonholonomic="true">
      <Agent type="roadmapfollowing"/>
    </Robot>

    <!-- WARNING Support for multiple constraints is not yet implemented! -->
    <!-- WARNING Workspace constraints are not finished and untested! -->
    <!-- WARNING CSpace bounding box constraints are supported, but currently
         the query method will just use the bounding box to sample a specific
         goal configuration. -->

    <Task label="query" robot="boxy">
      <StartConstraints>
        <CSpaceConstraint point="0 0 0 0 0 0 0 0 0 0 0 0"/>
      </StartConstraints>

      <GoalConstraints>
        <CSpaceConstraint point="0 10 0 0.2 0.8 0.5 0 0 0 0 0 0"/>
      </GoalConstraints>
    </Task>

  </Problem>

  <!-- Set available algorithms and parameters. -->
  <Library>

    <DistanceMetrics>
      <Euclidean label="euclidean"/>
      <ScaledEuclidean label="scaledEuclidean" scale="0.5"/>
      <WeightedEuclidean label="euclideanPosition" posWeight="1" rotWeight="0"
        velWeight="0" avlWeight="0"/>
      <CenterOfMass label="com"/>
      <KnotTheory label="knot"/>
      <Manhattan label="manhattan"/>
      <Minkowski label="minkowski" r1="3.0" r2="3.0" r3="0.333"
        normalize="false"/>
      <RMSD label="rmsd"/>
      <LPSwept label="LPSwept" posRes="5" oriRes="5" useBBox="true" lpLabel="sl"/>
      <BinaryLPSwept label="BLPSwept" posRes="5" oriRes="5" useBBox="true"
        lpLabel="sl"/>
      <TopologicalDistance label="connectedFreeSpace" dmLabel="euclidean"
        tmLabel="tm-coarse"/>
    </DistanceMetrics>

    <ValidityCheckers>
      <CollisionDetection label="rapid" method="RAPID"/>
      <CollisionDetection label="pqp" method="PQP"/>
      <CollisionDetection label="pqp_solid" method="PQP_SOLID"/>
      <NodeClearanceValidity label="nc" delta="0.3" nfLabel="Nearest"/>
      <NegateValidity label="nv" vcLabel="rapid"/>
      <MedialAxisClearance label="mac" maClearance="0.5" vcLabel="pqp_solid"
        dmLabel="euclidean" clearanceType="exact" penetrationType="exact"
        useBBX="true" positional="true"/>
      <ComposeValidity label="cv" operator="AND">
        <ValidityChecker label="pqp_solid"/>
        <ValidityChecker label="mac"/>
      </ComposeValidity>
      <AlwaysTrueValidity label="alwaysTrue"/>
      <ObstacleClearance label="oc" clearanceThreshold="1" vcLabel="pqp_solid"/>
    </ValidityCheckers>

    <NeighborhoodFinders>
      <BruteForceNF label="BFNF" dmLabel="euclidean" unconnected="false" k="10"/>
      <BruteForceNF label="Nearest" dmLabel="euclidean" unconnected="false"
        k="1" debug="true"/>
      <BruteForceNF label="BFNFAll" dmLabel="euclidean" k="0"/>
      <HierarchicalNF label="HierarchicalNF" nfLabel="BFNF" nfLabel2="RandomNF"
        dmLabel=""/>
      <RadiusNF label="RadiusNF" dmLabel="euclidean" radius="5"/>
      <TopologicalFilter label="TopologicalNF" nfLabel="BFNF" tmLabel="tm-coarse"
        backtrackDistance="6" debug="false"/>
      <LSHNF label="LSHNF"
        k="8" hashDimension="3" hashFamilies="8" hashRadius="9"
        dmLabel="euclidean"/>
      <KdTreeNF label="KdTreeNF"
        k="5" epsilon=".01" useScaling="true"
        dmLabel="euclidean"/>
    </NeighborhoodFinders>

    <Samplers>
      <UniformRandomSampler label="UniformRandom" vcLabel="alwaysTrue"/>
      <UniformRandomSampler label="UniformRandomFree" vcLabel="pqp_solid"/>
      <ObstacleBasedSampler label="OBPRM" vcLabel="rapid" useBBX="false"
        pointSelection="cspace" dmLabel="euclidean" stepSize="0.0"
        nShellsColl="0" nShellsFree="1" debug="false"/>
      <GaussianSampler label="Gauss" vcLabel="rapid" d="0.2" dmLabel="euclidean"
        useBBX="false"/>
      <BridgeTestSampler label="Bridge" vcLabel="rapid" d="0.2"
        dmLabel="euclidean" useBBX="true"/>
      <MedialAxisSampler label="MAPRM" vcLabel="pqp_solid" dmLabel="euclidean"
        clearanceType="exact" penetrationType="exact"
        useBBX="true" debug="false" positional="true"/>
      <GridSampler label="Grid" vcLabel="pqp_solid" ticks="10 10 10"
        debug="false"/>
      <MixSampler label="MixSampler">
        <Sampler label="UniformRandomFree" p="0.8"/>
        <Sampler label="UniformRandom" p="0.2"/>
      </MixSampler>
      <UniformObstacleBasedSampler label="UOBPRM" vcLabel="rapid" useBBX="false"
        dmLabel="euclidean" d="0.02" />
      <UniformMedialAxisSampler label="UMAPRM" vcLabel="pqp_solid" useBBX="true"
        dmLabel="euclidean" d="2.00" t="10" clearanceType="exact"
        penetrationType="exact" debug="false" positional="true"/>
      <WorkspaceImportanceSampler label="WIS" vcLabel="rapid" alpha="0.2"
        decompositionLabel="fine"/>
      <DynamicRegionSampler label="DynamicRegionSampler"
        samplerLabel="UniformRandom"
        explore=".2" regionFactor="2.5" penetration="1"
        velocityBiasing="false" velocityAlignment=".4" decompositionLabel="fine"/>
    </Samplers>

    <LocalPlanners>
      <StraightLine label="sl" binaryEvaluation="true" vcLabel="rapid"/>
      <StraightLine label="slAlwaysTrue" binaryEvaluation="true"
        vcLabel="alwaysTrue"/>
    </LocalPlanners>

    <Extenders>
      <KinodynamicExtender label="KinoExtender" debug="true"
        dmLabel="euclidean" vcLabel="rapid" fixed="false" best="true"
        numSteps="10" minDist=".01"/>
    </Extenders>

    <Metrics>
      <NumNodesMetric label="NumNodes"/>
      <NumEdgesMetric label="NumEdges"/>
      <TimeMetric label="TimeInSec"/>
    </Metrics>

    <MapEvaluators>
      <TimeEvaluator label="TimeEval" timeout="10"/>
      <ConditionalEvaluator label="NodesEval" metric_method="NumNodes"
        value="5000" operator=">="/>
      <ConditionalEvaluator label="EdgesEval" metric_method="NumEdges"
        value="1000" operator=">"/>

      <RRTQuery label="RRTQuery" goalDist="4"
        nfLabel="Nearest" exLabel="KinoExtender" vcLabel="pqp_solid" debug="true"/>
      <ComposeEvaluator label="BoundedRRTQuery" operator="or">
        <Evaluator label="NodesEval"/>
        <Evaluator label="RRTQuery"/>
      </ComposeEvaluator>
    </MapEvaluators>

    <MPStrategies>

      <!-- Kindodynamic RRT -->
      <BasicRRTStrategy label="RRT"
        numRoots="1" m="1" growthFocus="0.01" dmLabel="euclidean"
        nfLabel="Nearest" vcLabel="rapid" connectorLabel="Closest"
        gtype="DIRECTED_TREE" debug="true"
        growGoals="false" extenderLabel="KinoExtender"
        samplerLabel="UniformRandom">
        <Evaluator label="RRTQuery"/>
      </BasicRRTStrategy>

      <!-- DynamicDomainRRT -->
      <DynamicDomainRRT label="DynamicDomainRRT"
        growthFocus="0.01" dmLabel="euclidean" nfLabel="Nearest" vcLabel="rapid"
        gtype="UNDIRECTED_TREE" debug="false" growGoals="false"
        extenderLabel="BERO" samplerLabel="UniformRandom" r="2">
        <Evaluator label="BoundedRRTQuery"/>
      </DynamicDomainRRT>

      <!-- DynamicRegionRRT -->
      <BasicRRTStrategy label="DynamicRegionRRT"
        growthFocus="0.01" dmLabel="euclidean"
        nfLabel="Nearest" vcLabel="rapid"
        gtype="UNDIRECTED_TREE" debug="false"
        growGoals="false" extenderLabel="BERO"
        samplerLabel="DynamicRegionSampler">
        <Evaluator label="BoundedRRTQuery"/>
      </BasicRRTStrategy>

      <!-- Syclop -->
      <Syclop label="Syclop"
        numRoots="1" m="1" growthFocus="0.01" dmLabel="euclidean"
        nfLabel="Nearest" vcLabel="rapid" connectorLabel="Closest"
        gtype="UNDIRECTED_TREE" debug="false"
        growGoals="false" extenderLabel="BERO" samplerLabel="UniformRandom"
        tmLabel="tm">
        <Evaluator label="RRTQuery"/>
      </Syclop>

      <ScratchStrategy label="scratch"/>

    </MPStrategies>

    <MPTools>
      <TetGenDecomposition label="coarse" debug="false" switches="pnQ"
        io="read" baseFilename="3D/coarse"/>
      <TetGenDecomposition label="fine" debug="false" switches="pnqQ"
        io="read" baseFilename="3D/quality"/>

      <TopologicalMap label="tm-coarse" decompositionLabel="coarse"
        gridSize="1"/>
      <TopologicalMap label="tm-fine" decompositionLabel="fine"
        gridSize="1"/>

      <ReebGraphConstruction debug="false" write="false" filename=""/>

      <ClearanceUtility label="clearanceUtil" vcLabel="pqp_solid"
        dmLabel="euclidean" clearanceType="exact" penetrationType="exact"
        useBBX="true" positional="true"/>

      <MedialAxisUtility label="maUtil" vcLabel="pqp_solid"
        dmLabel="euclidean" clearanceType="exact" penetrationType="exact"
        useBBX="true" positional="true"/>

    </MPTools>

    <Solver mpStrategyLabel="RRT" seed="12345678"
      baseFilename="example" vizmoDebug="false"/>

  </Library>

</MotionPlanning>
