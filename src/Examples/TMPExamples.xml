<?xml version='1.0' encoding='UTF-8'?>
<MotionPlanning warnings="true" warningsAsErrors="true" print="false">

  <!-- Here we specify input files, such as environment and query. The
       'baseFilename in the Problem node is for Simulator stat output only. -->
  <Problem baseFilename="tmp_examples">

    <Environment filename="3D/3d.env"
      frictionCoefficient="0" gravity="0 0 0"/>

    <Robot label="boxy" filename="3D/boxy.robot">
      <!--
      <Agent type="planning"/>
      -->
      <Agent type="pathfollowing" waypointDm="euclideanPosition"
        waypointThreshold=".05"/>
    </Robot>

    <Robot label="coordinator" filename="3D/boxy.robot">
      <Agent type="coordinator" dmLabel="euclidean">
        <Member label="boxy"/>
      </Agent>
    </Robot>

    <Task label="startLocation" robot="boxy">
      <StartConstraints>
        <CSpaceConstraint point="0 0 0 0 0 0"/>
      </StartConstraints>
    </Task>

    <Task label="coordinator" robot="coordinator">
      <StartConstraints>
        <CSpaceConstraint point="0 0 0 0 0 0"/>
      </StartConstraints>
    </Task>

		<Decomposition label="main" taskLabel="first" coordinator="coordinator">
			<SemanticTask label="first">
    		<Task label="query1" robot="boxy">
      		<StartConstraints>
        		<CSpaceConstraint point="0 0 0 0 0 0"/>
      		</StartConstraints>

		      <GoalConstraints>
		        <CSpaceConstraint point="20 5 10 0.2 0.8 0.5"/>
    		  </GoalConstraints>
		    </Task>
			</SemanticTask>
		</Decomposition>

  </Problem>

  <!-- Set available algorithms and parameters. -->
  <Library>

    <DistanceMetrics>
      <Euclidean label="euclidean"/>
    </DistanceMetrics>

    <ValidityCheckers>
      <CollisionDetection label="rapid" method="RAPID"/>
      <CollisionDetection label="pqp" method="PQP"/>
      <CollisionDetection label="pqp_solid" method="PQP_SOLID"/>
     <AlwaysTrueValidity label="alwaysTrue"/>
    </ValidityCheckers>

    <NeighborhoodFinders>
      <BruteForceNF label="BFNF" dmLabel="euclidean" unconnected="false" k="10"/>
      <BruteForceNF label="Nearest" dmLabel="euclidean" unconnected="false"
        k="1"/>
      <BruteForceNF label="BFNFAll" dmLabel="euclidean" k="0"/>
    </NeighborhoodFinders>

    <Samplers>
      <UniformRandomSampler label="UniformRandom" vcLabel="alwaysTrue"/>
      <UniformRandomSampler label="UniformRandomFree" vcLabel="pqp_solid"/>
    </Samplers>

    <LocalPlanners>
      <StraightLine label="sl" binaryEvaluation="true" vcLabel="rapid"/>
      <StraightLine label="slAlwaysTrue" binaryEvaluation="true"
        vcLabel="alwaysTrue"/>
    </LocalPlanners>

    <Extenders>
    </Extenders>

    <PathModifiers>
    </PathModifiers>

    <Connectors>
      <CCsConnector label="ConnectCCs" debug="true"
        nfLabel="BFNF" lpLabel="sl"/>
      <NeighborhoodConnector label="Closest" debug="true"
        nfLabel="BFNF" lpLabel="sl" checkIfSameCC="false"/>
      <NeighborhoodConnector label="ClosestAlwaysTrue" nfLabel="BFNF"
        lpLabel="slAlwaysTrue" checkIfSameCC="false"/>
      <NeighborhoodConnector label="AllToAll" nfLabel="BFNFAll" lpLabel="sl"
        checkIfSameCC="false"/>
    </Connectors>

    <Metrics>
      <NumNodesMetric label="NumNodes"/>
      <NumEdgesMetric label="NumEdges"/>
      <TimeMetric label="TimeInSec"/>
    </Metrics>

    <MapEvaluators>
      <TrueEvaluation label="TrueEvaluator" />
      <QueryMethod label="Query" debug="false"
        graphSearchAlg="dijkstras"/>
      <LazyQuery label="LazyQuery" debug="true"
        vcLabel="pqp_solid" lpLabel="sl" enhanceDmLabel="euclidean"
        numEnhance="10" d="0.5" deleteInvalid="true">
        <NodeConnectionMethod label="ClosestAlwaysTrue"/>
        <Resolution mult="27"/>
        <Resolution mult="16"/>
        <Resolution mult="1"/>
      </LazyQuery>
    </MapEvaluators>


    <MPStrategies>

      <!-- Basic PRM where num samples is based on Number -->
      <BasicPRM label="BasicPRM1" debug="true">
        <Sampler label="UniformRandomFree" number="1" attempts="1"/>
        <!--Sampler Method="Gauss" number="10" attempts="10"/-->
        <!--Sampler Method="OBPRM" number="10" attempts="10"/-->
        <!--Sampler Method="MAPRM" number="10" attempts="10"/-->
        <Connector label="Closest"/>
        <!--Connector label="KdTree"/-->
        <Evaluator label="Query"/>
      </BasicPRM>

      <!-- Basic PRM restarted from an input roadmap input.map. -->
      <BasicPRM label="BasicPRM2"
        inputMap="input.map">
        <Sampler label="UniformRandomFree" number="10" attempts="10"/>
        <Connector label="Closest"/>
        <Evaluator label="NodesEval"/>
      </BasicPRM>

      <!-- LazyPRM -->
      <BasicPRM label="LazyPRM" debug="true">
        <Sampler label="UniformRandom" number="1" attempts="1"/>
        <Connector label="ClosestAlwaysTrue"/>
        <Evaluator label="LazyQuery"/>
      </BasicPRM>


      <!-- EvaluateMapStrategy -->
      <EvaluateMapStrategy label="EvaluateMapStrategy">
        <Evaluator label="NodesEval"/>
      </EvaluateMapStrategy>


    </MPStrategies>

    <MPTools>
    </MPTools>

    <!-- MPProblem allows multiple solvers to be specified and executed. -->

    <Solver mpStrategyLabel="BasicPRM1" seed="12345678"
      baseFilename="example" vizmoDebug="true"/>

  </Library>

	<TMPLibrary>
		<TMPStrategies>
			<SimpleMotionMethod label="SimpleMotion" teLabel="motionEval"/>
		</TMPStrategies>

		<PoIPlacementMethods>
		</PoIPlacementMethods>

		<TaskEvaluators>
			<SimpleMotionEvaluator label="motionEval"/>
		</TaskEvaluators>

		<TaskDecomposers>
		</TaskDecomposers>

		<TaskAllocators>
		</TaskAllocators>

		<StateGraphs>
		</StateGraphs>

		<TMPTools>
		</TMPTools>
	
		<Solver tmpStrategyLabel="SimpleMotion" baseFilename="tmp_examples"/>
	</TMPLibrary>

</MotionPlanning>
