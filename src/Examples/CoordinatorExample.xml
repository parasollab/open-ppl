<?xml version='1.0' encoding='UTF-8'?>
<MotionPlanning warnings="true" warningsAsErrors="true" print="false">

  <!-- Here we specify input files, such as environment and query. -->
  <Problem baseFilename="Coordinator">

    <Environment filename="3D/3d.env" positionRes=".01">
    </Environment>

    <Robot label="member1" filename="3D/boxy.robot" capability="plain" color="red">
      <Agent type="child" waypointDm="positionEuclidean"
        waypointThreshold=".05" debug="true"/>
    </Robot>

    <Robot label="member2" filename="3D/boxy.robot" capability="plain" color="green">
      <Agent type="child" waypointDm="positionEuclidean"
        waypointThreshold=".05" debug="true"/>
    </Robot>

    <Robot label="coordinator" virtual="true" filename="3D/boxy.robot" manipulator="false">
      <Agent type="coordinator" dmLabel="euclidean" debug="true"> 
        <Member label="member1"/>
        <Member label="member2"/>
        <StepFunction type="defaultcoordinator" debug="true"/>
      </Agent>
    </Robot>

    <Task label="start1" robot="member1">
      <StartConstraints>
        <CSpaceConstraint point="0 0 0 0 0 0"/>
      </StartConstraints>
    </Task>

    <Task label="start2" robot="member2">
      <StartConstraints>
        <CSpaceConstraint point="20 10 20 0 0 0"/>
      </StartConstraints>
    </Task>

    <Task label="startC" robot="coordinator">
      <StartConstraints>
        <CSpaceConstraint point="0 0 0 0 0 0"/>
      </StartConstraints>
    </Task>

    <!--Decomposition tree defining possible satisfactory combinations of subtasks-->
    <Decomposition label="main" taskLabel="top" coordinator="coordinator">
      <!--Parent task for individual tasks in decomposition tree-->
      <SemanticTask label="top" subtaskRelation="AND"/>

      <!--'Simple task' containing a traditional motion planning task-->
      <SemanticTask label="query1" parent="top" decomposable="false" fixedAllocation="true">
        <Task label="mp1" robot="member1">
          <StartConstraints>
            <CSpaceConstraint point="0 0 0 0 0 0"/>
          </StartConstraints>

          <GoalConstraints>
            <CSpaceConstraint point="20 0 0 0 0 0"/>
          </GoalConstraints>
        </Task>
      </SemanticTask>

      <!--'Simple task' containing a traditional motion planning task-->
      <SemanticTask label="query2" parent="top" decomposable="false" fixedAllocation="true">
        <Task label="mp2" robot="member2">
          <StartConstraints>
            <CSpaceConstraint point="20 10 20 0 0 0"/>
          </StartConstraints>

          <GoalConstraints>
            <CSpaceConstraint point="-20 -10 -20 0 0 0"/>
          </GoalConstraints>
        </Task>
      </SemanticTask>
    </Decomposition>

  </Problem>

  <!-- Set available algorithms and parameters. -->
  <Library>

    <DistanceMetrics>
      <Euclidean label="euclidean"/>
      <WeightedEuclidean label="positionEuclidean" posWeight=1 rotWeight=0 velWeight=0 avlWeight=0/>
    </DistanceMetrics>

    <ValidityCheckers>
      <CollisionDetection label="pqp" method="PQP"/>
      <CollisionDetection label="pqp_solid" method="PQP_SOLID" debug="false"/>
      <CollisionDetection label="pqp_solid_robot" method="PQP_SOLID" interRobotCollision="true"/>
      <TerrainValidity label="terrain" debug="false"/>
      <ComposeValidity label="terrain_robot" operator="AND">
        <ValidityChecker label="pqp_solid_robot"/>
        <ValidityChecker label="terrain"/>
      </ComposeValidity>
      <ComposeValidity label="terrain_solid" operator="AND">
        <ValidityChecker label="pqp_solid"/>
        <ValidityChecker label="terrain"/>
      </ComposeValidity>
      <AlwaysTrueValidity label="alwaysTrue"/>
    </ValidityCheckers>

    <NeighborhoodFinders>
      <BruteForceNF label="BFNF" dmLabel="euclidean" unconnected="false" k="10"/>
      <BruteForceNF label="Nearest" dmLabel="euclidean" unconnected="false"
        k="1"/>
    </NeighborhoodFinders>

    <Samplers>
      <UniformRandomSampler label="UniformRandom" vcLabel="alwaysTrue"/>
      <UniformRandomSampler label="UniformRandomFree" vcLabel="pqp_solid"/>
      <UniformRandomSampler label="UniformRandomFreeRobot" vcLabel="pqp_solid_robot"/>
      <UniformRandomSampler label="UniformRandomFreeTerrain" vcLabel="terrain_robot"/>
    </Samplers>

    <LocalPlanners>
      <StraightLine label="sl" binaryEvaluation="true" vcLabel="terrain_solid"/>
      <StraightLine label="slRobot" binaryEvaluation="true" vcLabel="terrain_robot"/>
      <StraightLine label="slAlwaysTrue" binaryEvaluation="true"
        vcLabel="alwaysTrue"/>
    </LocalPlanners>

    <Extenders>
      <BasicExtender label="BERO" debug="false" dmLabel="euclidean"
        vcLabel="rapid" maxDist="1." minDist=".001"/>
      <BasicExtender label="BESO" debug="false" dmLabel="euclidean"
        vcLabel="rapid" maxDist="10." minDist=".001" randomOrientation="false"/>
    </Extenders>

    <PathModifiers>
    </PathModifiers>

    <Connectors>
      <CCsConnector label="ConnectCCs" nfLabel="BFNF" lpLabel="sl"/>
      <NeighborhoodConnector label="Closest" nfLabel="BFNF" lpLabel="sl"
        checkIfSameCC="false" debug="false"/>
      <NeighborhoodConnector label="ClosestRobot" nfLabel="BFNF" lpLabel="slRobot"
        checkIfSameCC="false" debug="false"/>
      <NeighborhoodConnector label="ClosestAlwaysTrue" nfLabel="BFNF"
        lpLabel="slAlwaysTrue" checkIfSameCC="false"/>
      <NeighborhoodConnector label="AllToAll" nfLabel="BFNFAll" lpLabel="sl"
        checkIfSameCC="false"/>
    </Connectors>

    <Metrics>
      <NumNodesMetric label="NumNodes"/>
      <NumEdgesMetric label="NumEdges"/>
      <TimeMetric label="TimeInSec"/>
    </Metrics>

    <MapEvaluators>
      <TrueEvaluation label="TrueEvaluator" />
      <QueryMethod label="PRMQuery" debug="false" graphSearchAlg="dijkstras">
      </QueryMethod>
      <QueryMethod label="MegaQuery" debug="false" graphSearchAlg="dijkstras">
			</QueryMethod>
			<LazyQuery label="MegaLazyQuery"
        lpLabel="slRobot" graphSearchAlg="dijkstras"
        debug="false" deleteInvalid="true" vcLabel="terrain_solid">
        <NodeConnectionMethod label="ClosestRobot"/>
        <Resolution mult="27"/>
        <Resolution mult="16"/>
        <Resolution mult="1"/>
      </LazyQuery>
      <LazyQuery label="LazyQuery"
        lpLabel="slRobot" dmLabel="euclidean" graphSearchAlg="dijkstras"
        debug="false" deleteInvalid="true" vcLabel="terrain_robot">
        <NodeConnectionMethod label="ClosestRobot"/>
        <Resolution mult="27"/>
        <Resolution mult="16"/>
        <Resolution mult="1"/>
      </LazyQuery>
      <ConditionalEvaluator label="NodesEval" metric_method="NumNodes"
        value="1000" operator=">="/>
      <ConditionalEvaluator label="EdgesEval" metric_method="NumEdges"
        value="1000" operator=">"/>
      <ConditionalEvaluator label="FreqNodeEval" metric_method="NumNodes"
        value="50" operator="%"/>
      <ConditionalEvaluator label="TimeEvalShort" metric_method="TimeInSec"
        value="3" operator=">"/>
      <ConditionalEvaluator label="TimeEvalLong" metric_method="TimeInSec"
        value="5" operator=">"/>
      <NegateEvaluator label="Neg" evalLabel="NodesEval"/>
      <ComposeEvaluator label="BoundedQuery" operator="or">
        <Evaluator label="NodesEval"/>
        <Evaluator label="PRMQuery"/>
      </ComposeEvaluator>
      <ComposeEvaluator label="ModQuery" operator="and">
        <Evaluator label="FreqNodeEval"/>
        <Evaluator label="PRMQuery"/>
      </ComposeEvaluator>
      <ComposeEvaluator label="TimedPRMQuery" operator="or">
        <Evaluator label="TimeEvalShort"/>
        <Evaluator label="PRMQuery"/>
      </ComposeEvaluator>
      <ComposeEvaluator label="TimedLazyQuery" operator="or">
        <Evaluator label="TimeEvalLong"/>
        <Evaluator label="LazyQuery"/>
      </ComposeEvaluator>
      <TimeEvaluator label="TimeEval" timeout="3"/>
    </MapEvaluators>

    <MPStrategies>

      <!-- Basic PRM where num samples is based on Number -->
      <BasicPRM label="BasicPRM1" debug="true">
        <Sampler label="UniformRandomFree" number="40" attempts="1"/>
        <Connector label="Closest"/>
        <Evaluator label="PRMQuery"/>
      </BasicPRM>

      <BasicPRM label="LazyPRM" debug="false">
        <Sampler label="UniformRandomFreeRobot" number="20" attempts="1"/>
        <Connector label="ClosestRobot"/>
        <Evaluator label="LazyQuery"/>
      </BasicPRM>
      <BasicPRM label="TimedLazyPRM" debug="false">
        <Sampler label="UniformRandomFreeRobot" number="20" attempts="1"/>
        <Connector label="ClosestRobot"/>
        <Evaluator label="LazyQuery"/>
      </BasicPRM>

      <!-- EvaluateMapStrategy -->
      <EvaluateMapStrategy label="EvaluateMapStrategy" debug="false">
        <Evaluator label="MegaQuery"/>
      </EvaluateMapStrategy>

      <ScratchStrategy label="scratch"/>

    </MPStrategies>

    <MPTools>
      <LKHSearch label="lkhSearch"/>
      <TRPTool label="trpTool" queryLabel="LazyPRM"/>
    </MPTools>

    <!-- MPProblem allows multiple solvers to be specified and executed. -->

    <!--Solver mpStrategyLabel="BasicPRM1" seed="23456789"-->
    <!--Solver mpStrategyLabel="BasicPRM1" seed="12388221"-->
    <Solver mpStrategyLabel="BasicPRM1" seed="10923137"
      baseFilename="handoff" vizmoDebug="true"/>

  </Library>

	<TMPLibrary>
		<TMPStrategies>
      <SimpleMotionMethod label="motion" teLabel="simple"/>
		</TMPStrategies>

		<PoIPlacementMethods>
		</PoIPlacementMethods>

		<TaskEvaluators>
      <SimpleMotionEvaluator label="simple"/>
		</TaskEvaluators>

		<TaskDecomposers>
		</TaskDecomposers>

		<TaskAllocators>
		</TaskAllocators>

		<StateGraphs>
		</StateGraphs>
	
		<Solver tmpStrategyLabel="motion" baseFilename="coordinator-example"/>
	</TMPLibrary>

</MotionPlanning>
