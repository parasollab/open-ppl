<?xml version='1.0' encoding='UTF-8'?>
<MotionPlanning warnings="true" warningsAsErrors="true" print="false">

  <!-- Here we specify input files, such as environment and query. The
       'baseFilename in the Problem node is for Simulator stat output only. -->
  <Problem baseFilename="tmp_examples">

    <Environment filename="3D/3d.env"
      frictionCoefficient="0" gravity="0 0 0"/>

    <Robot label="boxy" filename="3D/boxy.robot">
      <!--
      <Agent type="planning"/>
      -->
      <Agent type="pathfollowing" waypointDm="euclideanPosition"
        waypointThreshold=".05"/>
    </Robot>

    <Task label="startLocation" robot="boxy">
      <StartConstraints>
        <CSpaceConstraint point="0 0 0 0 0 0"/>
      </StartConstraints>
    </Task>

		<Decomposition label="main" taskLabel="first" coordinator="boxy">
			<SemanticTask label="first">
    		<Task label="query1" robot="boxy">
      		<StartConstraints>
        		<CSpaceConstraint point="0 0 0 0 0 0"/>
      		</StartConstraints>

		      <GoalConstraints>
		        <CSpaceConstraint point="20 5 10 0.2 0.8 0.5"/>
    		  </GoalConstraints>
		    </Task>
			</SemanticTask>
		</Decomposition>

  </Problem>

  <!-- Set available algorithms and parameters. -->
  <Library>

    <DistanceMetrics>
      <Euclidean label="euclidean"/>
      <ScaledEuclidean label="scaledEuclidean" scale="0.5"/>
      <WeightedEuclidean label="euclideanPosition" posWeight="1" rotWeight="0"
        velWeight="0" avlWeight="0"/>
      <Manhattan label="manhattan"/>
      <Minkowski label="minkowski" r1="3.0" r2="3.0" r3="0.333"
        normalize="false"/>
    </DistanceMetrics>

    <ValidityCheckers>
      <CollisionDetection label="rapid" method="RAPID"/>
      <CollisionDetection label="pqp" method="PQP"/>
      <CollisionDetection label="pqp_solid" method="PQP_SOLID"/>
    </ValidityCheckers>

    <NeighborhoodFinders>
      <BruteForceNF label="BFNF" dmLabel="euclidean" unconnected="false" k="10"/>
      <BruteForceNF label="Nearest" dmLabel="euclidean" unconnected="false"
        k="1"/>
    </NeighborhoodFinders>

    <Samplers>
      <UniformRandomSampler label="UniformRandomFree" vcLabel="pqp_solid"/>
    </Samplers>

    <LocalPlanners>
      <StraightLine label="sl" binaryEvaluation="true" vcLabel="rapid"/>
    </LocalPlanners>

    <Extenders>
    </Extenders>

    <PathModifiers>
    </PathModifiers>

    <Connectors>
      <NeighborhoodConnector label="Closest" debug="true"
        nfLabel="BFNF" lpLabel="sl" checkIfSameCC="false"/>
    </Connectors>

    <Metrics>
      <NumNodesMetric label="NumNodes"/>
      <NumEdgesMetric label="NumEdges"/>
      <TimeMetric label="TimeInSec"/>
    </Metrics>

    <MapEvaluators>
      <TrueEvaluation label="TrueEvaluator" />
      <QueryMethod label="Query" debug="false"
        graphSearchAlg="dijkstras"/>
      <LazyQuery label="LazyQuery" debug="true"
        vcLabel="pqp_solid" lpLabel="sl" enhanceDmLabel="euclidean"
        numEnhance="10" d="0.5" deleteInvalid="true">
        <NodeConnectionMethod label="ClosestAlwaysTrue"/>
        <Resolution mult="27"/>
        <Resolution mult="16"/>
        <Resolution mult="1"/>
      </LazyQuery>
      <PrintMapEvaluation label="PrintMap" base_name="Basic"/>
      <ConditionalEvaluator label="NodesEval" metric_method="NumNodes"
        value="1000" operator=">="/>
      <ConditionalEvaluator label="EdgesEval" metric_method="NumEdges"
        value="1000" operator=">"/>
      <ConditionalEvaluator label="FreqNodeEval" metric_method="NumNodes"
        value="50" operator="%"/>
      <NegateEvaluator label="Neg" evalLabel="NodesEval"/>
      <ComposeEvaluator label="BoundedQuery" operator="or">
        <Evaluator label="NodesEval"/>
        <Evaluator label="Query"/>
      </ComposeEvaluator>
      <TimeEvaluator label="TimeEval" timeout="10"/>
    </MapEvaluators>
    <MPStrategies>

      <!-- Basic PRM where num samples is based on Number -->
      <BasicPRM label="BasicPRM1" debug="true">
        <Sampler label="UniformRandomFree" number="1" attempts="1"/>
        <Connector label="Closest"/>
        <Evaluator label="Query"/>
      </BasicPRM>

      <!-- LazyPRM -->
      <BasicPRM label="LazyPRM" debug="true">
        <Sampler label="UniformRandom" number="1" attempts="1"/>
        <Connector label="ClosestAlwaysTrue"/>
        <Evaluator label="LazyQuery"/>
      </BasicPRM>

      <!-- EvaluateMapStrategy -->
      <EvaluateMapStrategy label="EvaluateMapStrategy">
        <Evaluator label="NodesEval"/>
      </EvaluateMapStrategy>
    </MPStrategies>

    <MPTools>
    </MPTools>

    <!-- MPProblem allows multiple solvers to be specified and executed. -->

    <Solver mpStrategyLabel="BasicPRM1" seed="12345678"
      baseFilename="example" vizmoDebug="true"/>

  </Library>

	<TMPLibrary>
		<TMPStrategies>
			<SimpleMotionMethod label="SimpleMotion" teLabel="motionEval"/>
		</TMPStrategies>

		<PoIPlacementMethods>
		</PoIPlacementMethods>

		<TaskEvaluators>
			<SimpleMotionEvaluator label="motionEval"/>
		</TaskEvaluators>

		<TaskDecomposers>
		</TaskDecomposers>

		<TaskAllocators>
		</TaskAllocators>

		<StateGraphs>
		</StateGraphs>

		<TMPTools>
		</TMPTools>

    <ActionSpace>

      <!-- Conditions -->
      <Condition label="FormationExample" type="formation">
        <Member type="boxy"/>
      </Condition>

      <Condition label="MotionExample" type="motion">
        <!--CSpaceConstraint point="0 0 0 0 0 0" robot="boxy"/-->
      </Condition>

      <!-- Actions -->
      <Action label="ActionExample">
        <PreConditions>
          <Condition label="FormationExample"/>
          <Condition label="MotionExample"/>
        </PreConditions>

        <PostConditions>
          <Condition label="FormationExample"/>
          <Condition label="MotionExample"/>
        </PostConditions>
      </Action>

      <Interaction label="InteractionExample" isLabel="InteractionStrategyExample">
        <PreConditions>
          <Condition label="FormationExample"/>
          <Condition label="MotionExample"/>
        </PreConditions>

        <InterimConditions>
          <Condition label="FormationExample"/>
          <Condition label="MotionExample"/>
        </InterimConditions>

        <PostConditions>
          <Condition label="FormationExample"/>
          <Condition label="MotionExample"/>
        </PostConditions>
      </Interaction>
    </ActionSpace>
	
		<Solver tmpStrategyLabel="SimpleMotion" baseFilename="tmp_examples"/>
	</TMPLibrary>

</MotionPlanning>
