################################################################################
## Default system variables
################################################################################
DEPS = -MMD -MF $*.d

UTILS_DEF = ${CD_DEF} ${CGAL_DEF}
UTILS_INCL = ${CD_INCL} ${TINYXML_INCL} ${MATHTOOL_INCL} ${MODELLOADER_INCL} ${MPNN_INCL} ${TETGEN_INCL}
UTILS_LIB = ${CD_LIB} ${CGAL_LIB} ${TINYXML_LIB} ${MODELLOADER_LIB} ${MPNN_LIB} ${KMEANS_LIB} ${TETGEN_LIB}
UTILS_LIBFILE = ${CD_LIBFILE} ${TINYXML_LIBFILE} ${MODELLOADER_LIBFILE} ${MPNN_LIBFILE} ${KMEANS_LIBFILE} ${TETGEN_LIBFILE}

NO_PQP = 0
NO_RAPID = 0

ifeq (${parallel}, 1)
  BOOST_INCL = -I$(BOOST_ROOT)/include
  Boost_LIBRARY_DIRS = $(BOOST_ROOT)/lib64
  BOOST_LIB = -lboost_thread -lboost_serialization
else
  BOOST_LIB = -lboost_thread -lboost_system
endif

################################################################################
# platform specific overrides
################################################################################

#linux/gcc on Manhattan
ifeq (${platform}, LINUX_gcc_mh)
  #use same boost as used in STAPL
  BOOST_ROOT = /usr/local
  BOOST_INCL = -I$(BOOST_ROOT)/include
  Boost_LIBRARY_DIRS = $(BOOST_ROOT)/lib
  Boost_LIBRARIES = -L$(Boost_LIBRARY_DIRS) -lboost_thread -lboost_date_time
  BOOST_LIB = -L$(Boost_LIBRARY_DIRS) -lboost_thread -lboost_serialization -lboost_date_time
endif

#linuc/gcc on brazos (brazos.tamu.edu) - TODO Verify boost options
ifeq (${platform}, LINUX_gcc_brazos)
  #use same boost as used in STAPL - TODO Remove hardcoding of Yanis's directory
  BOOST_ROOT = /home/ipapadop/usr/boost_1_48
  BOOST_INCL = -I$(BOOST_ROOT)/include
  Boost_LIBRARY_DIRS = $(BOOST_ROOT)/lib
  BOOST_LIB = -L$(Boost_LIBRARY_DIRS) -lboost_serialization
endif

#linux/gcc Cray - hopper.nersc.gov || edison.nersc.gov || rain.cse.tamu.edu
ifeq (${platform}, CRAY_gcc)
  # first boost for rain, second for nersc machines
  BOOST_ROOT = /opt/boost/gcc-4.7.2/boost-1.53
  #BOOST_ROOT = /global/homes/i/ipapadop/usr/hopper/boost/boost_1_48
  BOOST_INCL = -I$(BOOST_ROOT)/include
  Boost_LIBRARY_DIRS = $(BOOST_ROOT)/lib
  BOOST_LIB = -L$(Boost_LIBRARY_DIRS) -lboost_serialization
endif

#aix/64-bit/gcc - (e.g., hydra.tamu.edu)
ifeq (${platform}, AIX_64_gcc)
  #TODO Remove hardcoding
  BOOST_INCL = -I/scratch/shawnat/usr/include/boost-1_33_1
endif

#aix/64-bit/native compiler - (e.g., hydra.tamu.edu)
ifeq (${platform}, AIX_64_xlC)
  #TODO Remove hardcoding, check DEPS to see if change is needed
  BOOST_INCL = -I/scratch/shawnat/usr/include/boost-1_33_1
  DEPS = -M -MF $*.d
endif

#fink/gcc on 64 bit MAC
ifeq (${platform}, MACOS_gcc)
  #TODO Verify with and without parallel
  BOOST_ROOT = /sw
  BOOST_INCL = -I$(BOOST_ROOT)/include
  ifeq (${parallel}, 1)
    Boost_LIBRARY_DIRS = $(BOOST_ROOT)/lib
    BOOST_LIB = -L$(Boost_LIBRARY_DIRS) -lboost_serialization
  else
    Boost_LIBRARY_DIRS = $(BOOST_ROOT)/lib64
    BOOST_LIB = -L$(Boost_LIBRARY_DIRS) -lboost_thread -lboost_serialization
  endif
endif

################################################################################
## Collision Detection Libraries
################################################################################
CD_DEF =
CD_INCL =
CD_LIB =
CD_LIBFILE =

ifeq (${NO_PQP}, 0)
  CD_INCL += ${PQP_INCL}
  CD_LIB += ${PQP_LIB}
  CD_LIBFILE += ${PQP_DIR}/lib/libPQP.a
else
  CD_DEF += -DNO_PQP
endif

ifeq (${NO_RAPID}, 0)
  CD_INCL += ${RAPID_INCL}
  CD_LIB += ${RAPID_LIB}
  CD_LIBFILE += ${RAPID_DIR}/libRAPID.a
else
  CD_DEF += -DNO_RAPID
endif

CD_DIR = ${UTILS_DIR}/CD-libs

PQP_DIR = ${CD_DIR}/PQP_v1.2
PQP_LIB = -L${PQP_DIR}/lib -lPQP
PQP_INCL = -I${PQP_DIR}/include
${PQP_DIR}/lib/libPQP.a:
	cd ${PQP_DIR}; ${MAKE} platform=${platform} debug=${debug}

RAPID_DIR = ${CD_DIR}/RAPID
RAPID_LIB = -L${RAPID_DIR} -lRAPID
RAPID_INCL = -I${RAPID_DIR}
${RAPID_DIR}/libRAPID.a:
	cd ${RAPID_DIR}; ${MAKE} platform=${platform} debug=${debug}

################################################################################
## CGAL
################################################################################
CGAL_DEF = -DCGAL_NO_ASSERTIONS -DCGAL_NO_PRECONDITIONS -DCGAL_NO_POSTCONDITIONS
CGAL_LIB = -lCGAL -lmpfr -lgmp

################################################################################
## Tiny XML
################################################################################
TINYXML_DIR = ${UTILS_DIR}/xml/tinyxml
TINYXML_LIB = -L${TINYXML_DIR} -ltinyxml
TINYXML_INCL = -I${TINYXML_DIR}
${TINYXML_DIR}/libtinyxml.a:
	cd ${TINYXML_DIR}; ${MAKE} platform=${platform} debug=${debug}

TINYXML_LIBFILE = ${TINYXML_DIR}/libtinyxml.a

################################################################################
## Mathtool
################################################################################
MATHTOOL_DIR = ${UTILS_DIR}/mathtool
MATHTOOL_INCL = -I${MATHTOOL_DIR}

################################################################################
## Model Loader
################################################################################
MODELLOADER_DIR = ${UTILS_DIR}/modelloader
MODELLOADER_LIB = -L${MODELLOADER_DIR} -lmodloader
MODELLOADER_INCL = -I${MODELLOADER_DIR}
${MODELLOADER_DIR}/libmodloader.a:
	cd ${MODELLOADER_DIR}; ${MAKE} platform=${platform} debug=${debug}

MODELLOADER_LIBFILE = ${MODELLOADER_DIR}/libmodloader.a

################################################################################
## MPNN
################################################################################
MPNN_DIR = ${UTILS_DIR}/nearest_neighbors/MPNN
MPNN_SRC = ${MPNN_DIR}/src
MPNN_LIB = -L${MPNN_DIR}/src -lMPNN
MPNN_INCL = -I${MPNN_DIR}/include
MPNN_LIBFILE = ${MPNN_DIR}/src/libMPNN.a
${MPNN_LIBFILE}:
	cd ${MPNN_DIR}/src; ${MAKE} platform=${platform} debug=${debug}

################################################################################
## KMeans
################################################################################
KMEANS_DIR = ${UTILS_DIR}/Kmeans
KMEANS_LIB = -L${KMEANS_DIR} -lkmeans
KMEANS_INCL = -I${KMEANS_DIR}
${KMEANS_DIR}/libkmeans.a:
	cd ${KMEANS_DIR}; ${MAKE} platform=${platform} debug=${debug}

KMEANS_LIBFILE = ${KMEANS_DIR}/libkmeans.a

################################################################################
# TetGen
################################################################################
TETGEN_DIR = ${UTILS_DIR}/tetgen1.5.0
TETGEN_LIB = -L${TETGEN_DIR} -ltet
TETGEN_INCL = -I${TETGEN_DIR}
${TETGEN_DIR}/libtet.a:
	cd ${TETGEN_DIR}; ${MAKE} platform=${platform} debug=${debug}

TETGEN_LIBFILE = ${TETGEN_DIR}/libtet.a

################################################################################
## STAPL
################################################################################
#cd to STAPL dir and compile STAPL lib
ifeq (${parallel}, 1)
  STAPL_INCL  = -I${STAPL_DIR} -I${STAPL_DIR}/stapl -I${STAPL_DIR}/tools  \
		-I${STAPL_DIR}/tools/libstdc++/${STL_LIB}/ \
		-I${STAPL_DIR}/tools/icl
  STAPL_DEF = -D_PARALLEL -D_STAPL -D_STAPL_MPI -D_PGRAPH -DDYNAMIC_GRAPH \
	      -DSTAPL_RUNTIME_ENABLE_NO_COMM_GUARD -DBOOST_RESULT_OF_USE_TR1
  STAPL_LIB = ${STAPL_DIR}/lib/libstapl.a ${STAPL_DIR}/lib/libstapl_rt.a -lrt
${STAPL_DIR}/lib/libstapl.a:
	cd ${STAPL_DIR}; ${MAKE} platform=${platform} stl=tools/libstdc++/${STL_LIB}

STAPL_LIBFILE = ${STAPL_DIR}/lib/libstapl.a
else
  STAPL_INCL  = -I${STAPL_DIR} -I${STAPL_DIR}/stapl
endif

################################################################################
## Boost
################################################################################

BOOST_DEF := -DBOOST_MPL_CFG_NO_PREPROCESSED_HEADERS \
             -DBOOST_MPL_LIMIT_LIST_SIZE=30

################################################################################
## PMPL
################################################################################
PMPL_LIB = -L${PMPL_DIR} -lobprm
PMPL_LIBFILE =${PMPL_DIR}/libobprm.a
PMPL_INCL = \
	-I${PMPL_DIR}

PMPL_OBJS = \
	Cfg/Cfg.o \
	Environment/ActiveMultiBody.o \
	Environment/Body.o \
	Environment/Boundary.o \
        Environment/BoundingBox.o \
        Environment/BoundingBox2D.o \
        Environment/BoundingSphere.o \
        Environment/BoundingSphere2D.o \
	Environment/Connection.o \
	Environment/DHParameters.o \
	Environment/Environment.o \
	Environment/FixedBody.o \
	Environment/FreeBody.o \
	Environment/GMSPolygon.o \
	Environment/GMSPolyhedron.o \
	Environment/MultiBody.o \
	Environment/StaticMultiBody.o \
	Environment/SurfaceMultiBody.o \
	Environment/TetrahedralBoundary.o \
	MPProblem/MPProblemBase.o \
	NeighborhoodFinders/MPNNWrapper.o \
	Samplers/SimilarStructureSampler.o \
        Utilities/IOUtils.o \
        Utilities/MetricUtils.o \
        Utilities/MPUtils.o \
	Utilities/ReebGraphConstruction.o \
	Utilities/TetGenDecomposition.o \
	ValidityCheckers/CollisionDetection/CDInfo.o \
	ValidityCheckers/CollisionDetection/CollisionDetectionMethod.o \
	ValidityCheckers/CollisionDetection/RapidCollisionDetection.o \
	ValidityCheckers/CollisionDetection/PQPCollisionDetection.o \
	ValidityCheckers/CollisionDetection/SpheresCollisionDetection.o \
	Workspace/WorkspaceDecomposition.o \
	Workspace/WorkspacePortal.o \
	Workspace/WorkspaceRegion.o \
	Workspace/GridOverlay.o

ifeq (${ROBOT_DEF}, PMPCfgMultiRobot)
  PMPL_OBJS += Cfg/CfgMultiRobot.o
endif
ifeq (${ROBOT_DEF}, PMPReachableVolume)
  PMPL_OBJS += Cfg/CfgReachableVolume.o
endif
ifneq (,$(filter $(ROBOT_DEF), PMPSSSurfaceMult PMPCfgSurface))
  PMPL_OBJS += Cfg/CfgSurface.o \
	       Cfg/SSSurface.o \
	       Cfg/SSSurfaceMult.o
  endif
  ifeq (${ROBOT_DEF}, $(or PMPState))
  PMPL_OBJS += Cfg/State.o \
	      Environment/Control.o \
	      Environment/NonHolonomicMultiBody.o
  endif
  ifeq (${ROBOT_DEF}, $(or PMPReachDistCC PMPReachDistCCFixed))
  PMPL_OBJS += Cfg/Cfg_reach_cc.o \
	       Cfg/Cfg_reach_cc_fixed.o
  endif
