# Help ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#

# Each external library has one or more of the following variables related to
# compilation:
#  DIR     A root directory for the library's files.
#  DEF     A set of -D directives needed to compile with the library.
#  INCL    A set of -I directives needed to include files from the library.
#  LIB     A set of -L and -l directives needed to link against the library.
#  LIBFILE Any files that must be built from the library's source.
#
# To add a new library, define these variables as needed and add them to the
# UTILS variables.

################################################################################
# Default system variables
################################################################################
UTILS_DEF  = $(CD_DEF) $(STAPL_DEF) $(CGAL_DEF) $(BOOST_DEF) $(BULLET_DEF) \
             $(PHYSICAL_ROBOTS_DEF) $(LKH_DEF) $(MATLAB_DEFS)
UTILS_INCL = $(CD_INCL) $(TINYXML_INCL) $(MATHTOOL_INCL) $(MODELLOADER_INCL) \
	     $(MPNN_INCL) $(TETGEN_INCL) $(BULLET_INCL) $(PHYSICAL_ROBOTS_INCL) \
	     $(GLVIS_INCL) $(LKH_INCL) $(DLIB_INCL) $(MATLAB_INCL) $(CGAL_INC) \
	     $(STAPL_INCL) $(BOOST_INC)
UTILS_LIB  = $(CD_LIB) $(CGAL_LIB) $(TINYXML_LIB) $(MODELLOADER_LIB) \
	     $(MPNN_LIB) $(KMEANS_LIB) $(TETGEN_LIB) $(BULLET_LIB) \
	     $(STAPL_LIB) $(BOOST_LIB) \
	     $(PHYSICAL_ROBOTS_LIBS) $(GLVIS_LIBS) $(LKH_LIBS) $(MATLAB_LIBS)
UTILS_LIBFILE = $(CD_LIBFILE) $(TINYXML_LIBFILE) \
		$(CGAL_LIBFILE) $(MODELLOADER_LIBFILE) \
		$(MPNN_LIBFILE) $(KMEANS_LIBFILE) $(TETGEN_LIBFILE) \
		$(BULLET_LIBFILE) $(GLVIS_LIBFILE) $(PHYSICAL_ROBOTS_LIBFILE) \
		$(LKH_LIBFILE) $(STAPL_LIBFILE)

################################################################################
# Boost
################################################################################
BOOST_DEF := -DBOOST_MPL_CFG_NO_PREPROCESSED_HEADERS \
             -DBOOST_MPL_LIMIT_LIST_SIZE=30
BOOST_INC := -I/usr/include
BOOST_LIB := -lboost_thread -lboost_serialization -lboost_system -lboost_date_time


################################################################################
## Collision Detection Libraries
################################################################################
CD_DIR := $(UTILS_DIR)/CD-libs

# PQP
PQP_DIR     := $(CD_DIR)/PQP_v1.2
PQP_LIB     := -L$(PQP_DIR)/lib -lPQP
PQP_INCL    := -I$(PQP_DIR)/include
PQP_LIBFILE := $(PQP_DIR)/lib/libPQP.a
$(PQP_LIBFILE):
	@cd $(PQP_DIR) && $(MAKE) platform=$(platform) debug=$(debug)

# Rapid
RAPID_DIR     := $(CD_DIR)/RAPID
RAPID_LIB     := -L$(RAPID_DIR) -lRAPID
RAPID_INCL    := -I$(RAPID_DIR)
RAPID_LIBFILE := $(RAPID_DIR)/libRAPID.a
$(RAPID_LIBFILE):
	@cd $(RAPID_DIR) && $(MAKE) platform=$(platform) debug=$(debug)

# All collision detection
CD_DEF     :=
CD_INCL    := $(PQP_INCL) $(RAPID_INCL)
CD_LIB     := $(PQP_LIB) $(RAPID_LIB)
CD_LIBFILE := $(PQP_LIBFILE) $(RAPID_LIBFILE)

################################################################################
## CGAL
################################################################################
CGAL_INC :=
CGAL_DEF := -DCGAL_NO_ASSERTIONS -DCGAL_NO_PRECONDITIONS -DCGAL_NO_POSTCONDITIONS
CGAL_LIB := -lCGAL -lmpfr -lgmp
CGAL_LIBFILE :=

# Check if CGAL is available on the system. If not, we need to build it.
ifeq ("$(wildcard /usr/lib64/libCGAL.so)","")
  CGAL_DIR := $(CURDIR)/$(UTILS_DIR)/CGAL
  CGAL_INC := -I$(CGAL_DIR)/install/include
  CGAL_LIB := -Wl,-rpath=$(CGAL_DIR)/install/lib64 \
              -L$(CGAL_DIR)/install/lib64 $(CGAL_LIB)

  CGAL_LIBFILE := $(CGAL_DIR)/install
$(CGAL_LIBFILE):
	@echo Building CGAL library...
	@cd $(CGAL_DIR) && $(MAKE)
endif


################################################################################
## Tiny XML
################################################################################
TINYXML_DIR  := $(UTILS_DIR)/xml/tinyxml
TINYXML_LIB  := -L$(TINYXML_DIR) -ltinyxml
TINYXML_INCL := -I$(TINYXML_DIR)

TINYXML_LIBFILE := $(TINYXML_DIR)/libtinyxml.a
$(TINYXML_LIBFILE):
	@echo Building tinyxml library...
	@cd $(TINYXML_DIR) && $(MAKE) platform=$(platform) debug=$(debug)

################################################################################
## Mathtool
################################################################################
MATHTOOL_DIR  := $(UTILS_DIR)/mathtool
MATHTOOL_INCL := -I$(MATHTOOL_DIR)

################################################################################
## Model Loader
################################################################################
MODELLOADER_DIR  := $(UTILS_DIR)/modelloader
MODELLOADER_LIB  := -L$(MODELLOADER_DIR) -lmodloader
MODELLOADER_INCL := -I$(MODELLOADER_DIR)

MODELLOADER_LIBFILE := $(MODELLOADER_DIR)/libmodloader.a
$(MODELLOADER_LIBFILE): $(CGAL_LIBFILE)
	@echo Building modelloader library...
	@cd $(MODELLOADER_DIR) && $(MAKE) platform=$(platform) debug=$(debug) \
	  CGAL_DEF="$(CGAL_DEF)" CGAL_INCL="$(CGAL_INC)" CGAL_LIB="$(CGAL_LIB)"

################################################################################
## MPNN
################################################################################
MPNN_DIR  := $(UTILS_DIR)/nearest_neighbors/MPNN
MPNN_SRC  := $(MPNN_DIR)/src
MPNN_LIB  := -L$(MPNN_SRC) -lMPNN
MPNN_INCL := -I$(MPNN_DIR)/include

MPNN_LIBFILE := $(MPNN_SRC)/libMPNN.a
$(MPNN_LIBFILE):
	@echo Building MPNN library...
	@cd $(MPNN_SRC) && $(MAKE) platform=$(platform) debug=$(debug)

################################################################################
## KMeans
################################################################################
KMEANS_DIR  := $(UTILS_DIR)/Kmeans
KMEANS_LIB  := -L$(KMEANS_DIR) -lkmeans
KMEANS_INCL := -I$(KMEANS_DIR)

KMEANS_LIBFILE := $(KMEANS_DIR)/libkmeans.a
$(KMEANS_LIBFILE):
	@echo Building k-means library...
	@cd $(KMEANS_DIR) && $(MAKE) platform=$(platform) debug=$(debug)

################################################################################
# TetGen
################################################################################
TETGEN_DIR  := $(UTILS_DIR)/tetgen1.5.0
TETGEN_LIB  := $(TETGEN_DIR)/libtet.a
TETGEN_INCL := -I$(TETGEN_DIR)

TETGEN_LIBFILE := $(TETGEN_LIB)
$(TETGEN_LIBFILE):
	@echo Building tetgen library...
	@cd $(TETGEN_DIR) && $(MAKE) platform=$(platform) debug=$(debug)

################################################################################
## STAPL
################################################################################
STAPL_DIR ?= $(UTILS_DIR)/stapl_release
STL_LIB   ?= 4.8.2

ifeq ($(parallel), 1)
  STAPL_INCL = -I$(STAPL_DIR) -I$(STAPL_DIR)/stapl -I$(STAPL_DIR)/tools  \
	       -I$(STAPL_DIR)/tools/libstdc++/$(STL_LIB) \
	       -I$(STAPL_DIR)/tools/icl
  STAPL_DEF  = -D_PARALLEL -D_STAPL -D_STAPL_MPI -D_PGRAPH -DDYNAMIC_GRAPH \
	       -DSTAPL_RUNTIME_ENABLE_NO_COMM_GUARD -DBOOST_RESULT_OF_USE_TR1
  STAPL_LIB  = $(STAPL_DIR)/lib/libstapl.a $(STAPL_DIR)/lib/libstapl_rt.a -lrt

  STAPL_LIBFILE = $(STAPL_DIR)/lib/libstapl.a
else
  STAPL_INCL  = -I$(STAPL_DIR) -I$(STAPL_DIR)/stapl
endif

$(STAPL_LIBFILE):
	@echo Building stapl library...
	@cd $(STAPL_DIR) && $(MAKE) platform=$(platform) \
	 stl=tools/libstdc++/$(STL_LIB)


################################################################################
# PMPL
################################################################################
PMPL_DEF  := -D$(ROBOT_DEF)
PMPL_INCL := -I$(PMPL_DIR)
PMPL_LIB  := -L$(PMPL_DIR) -lobprm

PMPL_LIBFILE := $(PMPL_DIR)/libobprm.a

PMPL_SRCS = \
  Cfg/Cfg.cpp \
  Environment/ActiveMultiBody.cpp \
  Environment/Body.cpp \
  Environment/Boundary.cpp \
  Environment/BoundingBox.cpp \
  Environment/BoundingBox2D.cpp \
  Environment/BoundingSphere.cpp \
  Environment/BoundingSphere2D.cpp \
  Environment/Connection.cpp \
  Environment/DHParameters.cpp \
  Environment/Environment.cpp \
  Environment/FixedBody.cpp \
  Environment/FreeBody.cpp \
  Environment/GMSPolygon.cpp \
  Environment/GMSPolyhedron.cpp \
  Environment/MultiBody.cpp \
  Environment/StaticMultiBody.cpp \
  Environment/SurfaceMultiBody.cpp \
  Environment/TetrahedralBoundary.cpp \
  MPProblem/MPProblemBase.cpp \
  NeighborhoodFinders/MPNNWrapper.cpp \
  Samplers/SimilarStructureSampler.cpp \
  Utilities/IOUtils.cpp \
  Utilities/MetricUtils.cpp \
  Utilities/MPUtils.cpp \
  Utilities/ReebGraphConstruction.cpp \
  Utilities/TetGenDecomposition.cpp \
  ValidityCheckers/CollisionDetection/CDInfo.cpp \
  ValidityCheckers/CollisionDetection/CollisionDetectionMethod.cpp \
  ValidityCheckers/CollisionDetection/RapidCollisionDetection.cpp \
  ValidityCheckers/CollisionDetection/PQPCollisionDetection.cpp \
  ValidityCheckers/CollisionDetection/SpheresCollisionDetection.cpp \
  Workspace/WorkspaceDecomposition.cpp \
  Workspace/WorkspacePortal.cpp \
  Workspace/WorkspaceRegion.cpp \
  Workspace/GridOverlay.cpp
