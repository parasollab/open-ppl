<?xml version='1.0' encoding='UTF-8'?>
<MotionPlanning warnings="true" warningsAsErrors="true" print="false">

  <!-- Here we specify input files, such as environment and query. The
       'baseFilename in the Problem node is for Simulator stat output only. -->
  <Problem baseFilename="tmp_examples">

    <Environment filename="../Examples/3D/3d.env"
      frictionCoefficient="0" gravity="0 0 0">

      <Terrain capability="a">
        <Boundary limits="[-1:1 ; -1:1 ; -1:1 ; -1:1 ; -1:1 ; -1:1]"
          space="cspace" shape="box" color="magenta"/>
      </Terrain>
    </Environment>

    <Robot label="boxy1" filename="../Examples/3D/boxy.robot">
      <Agent type="pathfollowing" waypointDm="minkowski"
        waypointThreshold=".05"/>
    </Robot>

    <Robot label="boxy2" filename="../Examples/3D/boxy.robot">
      <Agent type="pathfollowing" waypointDm="minkowski"
        waypointThreshold=".05"/>
    </Robot>


    <RobotGroup label="robotGroup" robotLabels="boxy1 boxy2"/>

    <GroupTask label="groupQuery" group="robotGroup">
      <Task label="query-1" robot="boxy1">
        <StartConstraints>
          <CSpaceConstraint point="0 0 0 0 0 0"/>
        </StartConstraints>

        <GoalConstraints>
          <CSpaceConstraint point="20 5 10 0.2 0.8 0.5"/>
        </GoalConstraints>
      </Task>

      <Task label="query-2" robot="boxy2">
        <StartConstraints>
          <CSpaceConstraint point="5 0 0 0 0 0"/>
        </StartConstraints>

        <GoalConstraints>
          <CSpaceConstraint point="20 -5 10 0.2 0.8 0.5"/>
        </GoalConstraints>
      </Task>
    </GroupTask>

    <Robot label="coordinator" virtual="true" filename="../Examples/3D/boxy.robot" manipulator="false">
      <Agent type="coordinator" dmLabel="minkowski" debug="false">
        <Member label="boxy1"/>
        <Member label="boxy2"/>
        <StepFunction type="defaultcoordinator" debug="false"/>
      </Agent>
    </Robot>

    <Task label="startLocation" robot="boxy1">
      <StartConstraints>
        <CSpaceConstraint point="0 0 0 0 0 0"/>
      </StartConstraints>
    </Task>

    <Task label="startLocation" robot="boxy2">
      <StartConstraints>
        <CSpaceConstraint point="5 0 0 0 0 0"/>
      </StartConstraints>
    </Task>

    <Task label="coordinatorTask" robot="coordinator">
      <StartConstraints>
        <CSpaceConstraint point="0 0 0 0 0 0"/>
      </StartConstraints>
    </Task>

    <Decomposition label="main" taskLabel="first" coordinator="coordinator">

      <SemanticTask label="top" subtaskRelation="AND"/>

      <SemanticTask label="first" parent="top">
        <Task label="query1" robot="boxy1">
          <StartConstraints>
            <CSpaceConstraint point="0 0 0 0 0 0"/>
          </StartConstraints>

          <GoalConstraints>
            <CSpaceConstraint point="20 5 10 0.2 0.8 0.5"/>
          </GoalConstraints>
        </Task>
      </SemanticTask>

      <SemanticTask label="second" parent="top">
        <GroupTask label="groupQuery" group="robotGroup">
          <Task label="query-1" robot="boxy1">
            <StartConstraints>
              <CSpaceConstraint point="0 0 0 0 0 0"/>
            </StartConstraints>

            <GoalConstraints>
              <CSpaceConstraint point="20 5 10 0.2 0.8 0.5"/>
            </GoalConstraints>
          </Task>

          <Task label="query-2" robot="boxy2">
            <StartConstraints>
              <CSpaceConstraint point="5 0 0 0 0 0"/>
            </StartConstraints>

            <GoalConstraints>
              <CSpaceConstraint point="20 -5 10 0.2 0.8 0.5"/>
            </GoalConstraints>
          </Task>
        </GroupTask>
      </SemanticTask>
    </Decomposition>

  </Problem>

  <!-- Set available algorithms and parameters. -->
  <Library>

    <!-- <NBox>
      <NBo label="NBox"/>
    </NBox> -->


    <DistanceMetrics>
      <Manhattan label="manhattan"/>
      <Minkowski label="minkowski"/>
      <Euclidean label="euclidean"/>
      <LPSwept label="lpSwept" lpLabel="sl"/>
      <BinaryLPSwept label="binaryLPSwept" lpLabel="sl"/>
      <WeightedEuclidean label="weightedEuclidean" posWeight=0.25 rotWeight=0.25 velWeight=0.25 avlWeight=0.25/>
      <ScaledEuclidean label="scaledEuclidean"/>
      <WorkspaceTranslation label="workspaceTranslation" />
      <RMSD label="RMSD" />
    </DistanceMetrics>

    <ValidityCheckers>
      <AlwaysTrueValidity label="alwaysTrue"/>
      <TerrainValidity label="terrainValidity"/>

      <!-- Test not yet added -->
      <CollisionDetection label="pqp_solid" method="PQP_SOLID"/>
      <CollisionDetection label="rapid" method="RAPID"/>
    </ValidityCheckers>

    <NeighborhoodFinders>
      <!-- Test not yet added -->
      <BruteForceNF label="Nearest" dmLabel="euclidean" unconnected="false" k="1"/>
      <BruteForceNF label="Nearest4" dmLabel="euclidean" unconnected="true" k="4"/>
      <BruteForceNF label="BFNF" dmLabel="euclidean" unconnected="false" k="10"/>
    </NeighborhoodFinders>

    <Samplers>
      <BridgeTestSampler label="BridgeTest" d="10" dmLabel="euclidean" vcLabel="pqp_solid"/>
      <MixSampler label="MixSampler">
        <Sampler label="OBPRM" p=0.5/>
        <Sampler label="UniformRandom" p=0.5/>
      </MixSampler>
      <ObstacleBasedSampler label="OBPRM" vcLabel="rapid" useBBX="false"
        pointSelection="cspace" dmLabel="euclidean" stepSize="0.0"
        nShellsColl="10" nShellsFree="10" debug="false" />
      <UniformRandomSampler label="UniformRandom" vcLabel="alwaysTrue"/>
    </Samplers>

    <LocalPlanners>
      <StraightLine label="slAlwaysTrue" binaryEvaluation="true"
            vcLabel="alwaysTrue"/>
      <StraightLine label="sl" binaryEvaluation="true" vcLabel="rapid"/>
    </LocalPlanners>

    <Extenders>
      <BasicExtender label="BERO" debug="false" dmLabel="euclidean"
        vcLabel="alwaysTrue" maxDist="4." minDist=".01"/>
    </Extenders>

    <PathModifiers>
    </PathModifiers>

    <Connectors>
      <CCsConnector label="CCs" debug="false"
        nfLabel="BFNF" lpLabel="slAlwaysTrue" checkIfSameCC="false"/>
      <NeighborhoodConnector label="ClosestAlwaysTrue" nfLabel="BFNF"
      lpLabel="slAlwaysTrue" checkIfSameCC="false"/>
      <RewireConnector label="Rewire" nfLabel="Nearest4" lpLabel="slAlwaysTrue"/>
    </Connectors>

    <Metrics>
      <NumNodesMetric label="NumNodes"/>
      <NumEdgesMetric label="NumEdges"/>
      <TimeMetric label="TimeInSec"/>
    </Metrics>

    <MapEvaluators>
      <LazyQuery label="LazyQuery" debug="false"
        vcLabel="pqp_solid" lpLabel="sl" enhanceDmLabel="euclidean"
        numEnhance="10" d="0.5" deleteInvalid="true">
        <NodeConnectionMethod label="ClosestAlwaysTrue"/>
        <Resolution mult="27"/>
        <Resolution mult="16"/>
        <Resolution mult="1"/>
      </LazyQuery>

      <QueryMethod label="Query" debug="false"
        graphSearchAlg="dijkstras" safeIntervalToolLabel="SI"/>
    </MapEvaluators>

    <MPStrategies>
      <!-- Test not yet added -->
      <!-- Basic RRT-->
      <!--BasicRRTStrategy label="RRT" debug="false"
        querySampler="UniformRandom" samplerLabel="UniformRandom"
        nfLabel="Nearest" extenderLabel="BERO"
        growGoals="false" growthFocus="0.01" m="1"
        goalDmLabel="minkowski" goalThreshold="5"-->
        <!--Evaluator label="Query"/-->
      <!--/BasicRRTStrategy-->
      <!-- LazyPRM-->

      <DynamicRegionRRT label="DRRRT" debug="false" querySampler="UniformRandomFree"
          samplerLabel="UniformRandom" nfLabel="Nearest" extenderLabel="BERO"
          growGoals="true" connectorLabel="Closest" explore=".2" regionFactor="2.5"
          penetration="1" velocityBiasing="false" velocityAlignment=".4"
          decompositionLabel="fine" skeletonType="ma">
          <Evaluator label="BoundedQuery" />
      </DynamicRegionRRT>

      <BasicPRM label="LazyPRM" debug="false">
        <Sampler label="UniformRandom" number="1" attempts="1"/>
        <Connector label="ClosestAlwaysTrue" />
        <Evaluator label="LazyQuery"/>
      </BasicPRM>
    </MPStrategies>


    <MPTools>
      <SafeIntervalTool label="SI" vcLabel="pqp_solid"/>
      <MedialAxisUtility vcLabel="pqp_solid"
        dmLabel="euclidean" clearanceType="exact" penetrationType="exact"
        useBBX="true" positionalDofsOnly="true" clearanceRays="300" penetrationRayFactor="1"/>
    </MPTools>

    <!-- MPProblem allows multiple solvers to be specified and executed. -->

    <Solver mpStrategyLabel="RRT" seed="12345678"
      baseFilename="example" vizmoDebug="true"/>

    <Solver mpStrategyLabel="LazyPRM" seed="12345678"
      baseFilename="example" vizmoDebug="true"/>

  </Library>

  <TMPLibrary>
    <TMPStrategies>
      <SimpleMotionMethod label="SimpleMotion" teLabel="motionEval"/>
    </TMPStrategies>

    <PoIPlacementMethods>
    </PoIPlacementMethods>

    <TaskEvaluators>
      <SimpleMotionEvaluator label="motionEval"/>
    </TaskEvaluators>

    <TaskDecomposers>
    </TaskDecomposers>

    <TaskAllocators>
    </TaskAllocators>

    <StateGraphs>
    </StateGraphs>

    <TMPTools>
    </TMPTools>

    <Solver tmpStrategyLabel="SimpleMotion" baseFilename="tmp_examples"/>
  </TMPLibrary>

</MotionPlanning>
