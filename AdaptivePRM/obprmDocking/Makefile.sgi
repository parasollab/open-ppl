# $Id$
#------------------------------------------------------
# Make your own and use it or use the one in BASELINE
#------------------------------------------------------

# -- for dynamic shared object library libobprm.so
   OBPRMLIB_DIR = /pub/dsmft/users/gsong/cvs/OBPRM
   OBPRMLIB     = -L${OBPRMLIB_DIR} -lobprm

#------------------------------------------------------
# Basic defns; do not change
#------------------------------------------------------
 MATHLIB   = -lm
 STL_INCL  = -I/pub/dsmft/STL

#------------------------------------------------------
# collision detection packages available
#------------------------------------------------------
 CD_DIR = /dsmft/CD-libs/sgi

 CSTK_DIR      = ${CD_DIR}/CSTK/CSTK-1.22/cstk
 CSTKLIB_DIR   = ${CSTK_DIR}/lib
 CSTKLIB       = -L${CSTKLIB_DIR} -lcstk
 CSTK_INCL     = -I${CSTK_DIR}/src/include

 VCLIP_DIR     = ${CD_DIR}/VCLIP
 VCLIPLIB_DIR  = ${VCLIP_DIR}/lib
 VCLIPLIB      = -L${VCLIPLIB_DIR} -lvclip
 VCLIP_INCL    = -I${VCLIP_DIR}/include

 RAPID_DIR     = ${CD_DIR}/RAPID/RAPID_v2_01
 RAPIDLIB_DIR  = ${RAPID_DIR}
 RAPIDLIB      = -L${RAPIDLIB_DIR} -lRAPID
 RAPID_INCL    = -I${RAPID_DIR}

 PQP_DIR       = ${CD_DIR}/PQP
 PQPLIB_DIR    = ${PQP_DIR}/lib
 PQPLIB        = -L${PQPLIB_DIR} -lPQP
 PQP_INCL      = -I${PQP_DIR}/include


#-----------------------------------------------------------------------------
# Defines for various types of executables
#	VERBOSE  for printing out all kinds of babble for debugging
#       INTERMEDIATE_FILES for creating intermediate "*.path" files
#--------------------------------------------------------------------------
   ADEFS = -DVERBOSE=0 -DINTERMEDIATE_FILES=1 -DCHECKIFSAMECC=0  -DUSE_CSTK -DUSE_VCLIP -DUSE_RAPID -DUSE_PQP

### DEFS = ${ADEFS} -DQUIETGRAPH -DQUIET
    DEFS = ${ADEFS} 

showdefs :: 
	echo "${DEFS}";


 AFLAGS    = -I. -I${OBPRMLIB_DIR} ${STL_INCL} ${CSTK_INCL} ${VCLIP_INCL} ${RAPID_INCL} ${PQP_INCL} ${DEFS}

#-----------------------------------------------------------------------------
# Choose a compiler & its options
#--------------------------------------------------------------------------
 CC = CC
#CC = /pub/gnu_sgi/bin/g++

CXX = CC

# -- for development on TERMINATOR (can't seem to use it better due to cstk)
   OPTS = -o32 -O2 -exceptions
#  OPTS = -o32 -O1 -show -ptv 
# -- optimized (our O2's) (slow_compile/good_code) --
#  OPTS =  -o32 -O2 -OPT:Olimit=0 -show

#  DEPS = 
   DEPS = -MDupdate Dependencies 

# -- warnings (default, full, none) --
#  CWARNS = 
#  CWARNS = -fullwarn
   CWARNS = -w

CFLAGS     = $(OPTS) $(AFLAGS) $(DEPS) $(CWARNS)
CXXFLAGS   = $(CFLAGS) 
DSOFLAGS   = $(CFLAGS) -shared -no_unresolved

#-----------------------------------------------------------------------------
# Build 
#--------------------------------------------------------------------------

#--------------------------------------------------------------------
deps: 
	touch Dependencies

libs: objs 

#--------------------------------------------------------------------
prm: main_prm.c libs
	$(CXX) $(CXXFLAGS) -o prm \
	   -rpath $(OBPRMLIB_DIR):$(CSTKLIB_DIR):${VCLIPLIB_DIR}:${RAPIDLIB_DIR}:${PQPLIB_DIR} \
		main_prm.c \
		${OBJS} $(OBPRMLIB) $(MATHLIB) $(CSTKLIB) ${VCLIPLIB} ${RAPIDLIB} ${PQPLIB}
	rm -f main_prm.o

#--------------------------------------------------------------------
aprm: main_aprm.c libs
	$(CXX) $(CXXFLAGS) -o aprm \
	   -rpath $(OBPRMLIB_DIR):$(CSTKLIB_DIR):${VCLIPLIB_DIR}:${RAPIDLIB_DIR}:${PQPLIB_DIR} \
		main_aprm.c \
		${OBJS} $(OBPRMLIB) $(MATHLIB) $(CSTKLIB) ${VCLIPLIB} ${RAPIDLIB} ${PQPLIB}
	rm -f main_aprm.o

#--------------------------------------------------------------------
obprm: main_obprm.c libs
	$(CXX) $(CXXFLAGS) -o obprm \
           -rpath $(OBPRMLIB_DIR):$(CSTKLIB_DIR):${VCLIPLIB_DIR}:${RAPIDLIB_DIR}:${PQPLIB_DIR} \
                main_obprm.c \
		${OBJS} $(OBPRMLIB) $(MATHLIB) $(CSTKLIB) ${VCLIPLIB} ${RAPIDLIB} ${PQPLIB}
	rm -f main_obprm.o

#--------------------------------------------------------------------
query: main_query.c libs
	$(CXX) $(CXXFLAGS) -o query \
           -rpath $(OBPRMLIB_DIR):$(CSTKLIB_DIR):${VCLIPLIB_DIR}:${RAPIDLIB_DIR}:${PQPLIB_DIR} \
                main_query.c \
                ${OBJS} $(OBPRMLIB) $(MATHLIB) $(CSTKLIB) ${VCLIPLIB} ${RAPIDLIB} ${PQPLIB}
	rm -f main_query.o

#--------------------------------------------------------------------
.SUFFIXES: .c
.c.o:
	$(CC) ${CFLAGS} -c $<

% : %.o
	$(CXX) $(CXXFLAGS) -o $@ $@.cp $(MATHLIB) $(CSTKLIB) ${VCLIPLIB} ${RAPIDLIB} ${PQPLIB}
#	$(CXX) $(CXXFLAGS) -o $@ $< $(MATHLIB) $(CSTKLIB) ${VCLIPLIB} ${RAPIDLIB} ${PQPLIB}

#--------------------------------------------------------------------

OBJS = \
        MyInput.o \
        Cfg_tree.o \
        DynamicsLocalPlanners.o \
        CfgProtein.o \
        BioPotentials.o \
        MyQuery.o \
        CfgLigand.o \
        PotentialForceGrids.o \
	GradientDecent.o

objs: $(OBJS)

#--------------------------------------------------------------------
runclean::
	rm -f mapnodes.*
	rm -f *.map
	rm -f *.path

clean::
	rm -f query
	rm -f obprm
	rm -f aprm
	rm -f prm

reallyclean::
	rm -f query
	rm -f obprm
	rm -f aprm
	rm -f prm
	rm -f libobprm.so
	rm -R -f ii_files
	rm -f *.o
	rm -f Dependencies
	touch Dependencies
	rm -f so_locations

#-----------------------------------------------------------------------------
# Build and update depent
#-----------------------------------------------------------------------------

Dependencies:
	echo >Dependencies "#-*- Makefile -*-"

include Dependencies

